
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
import cv2
from PIL import Image, ImageTk
import threading
import subprocess
import ujson
import sys
import os

current_dir = os.path.dirname(os.path.abspath(__file__))

project_root = os.path.abspath(os.path.join(current_dir, '../../'))

sys.path.insert(0, project_root)

import thesystem.system
import thesystem.titleequip

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

def start_move(event):
    window.lastx, window.lasty = event.widget.winfo_pointerxy()

def move_window(event):
    x_root, y_root = event.widget.winfo_pointerxy()
    deltax, deltay = x_root - window.lastx, y_root - window.lasty

    if deltax != 0 or deltay != 0:  # Update only if there is actual movement
        window.geometry(f"+{window.winfo_x() + deltax}+{window.winfo_y() + deltay}")
        window.lastx, window.lasty = x_root, y_root


def ex_close(win):
    if setting_data["Settings"]["Performernce (ANIME):"] != "True":
        stop_event.set()
        update_thread.join()
    threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
    subprocess.Popen(['python', 'Anime Version/Status Tab/gui.py'])
    thesystem.system.animate_window_close(window, 0, window_width, step=20, delay=1)


name1=name2=name3=name4=name5=name6=name7=name8=name9=name10=name11=name12=name13=''
rank1=rank2=rank3=rank4=rank5=rank6=rank7=rank8=rank9=rank10=rank11=rank12=rank13='X'
c=0


with open("Files/Titles/Titles.json", 'r') as fson:
    data=ujson.load(fson)
    data_key=list(data.keys())
    try:
        for k in data_key:
            if c==0:
                name1=k
                rank1=data[k]["Rank"]
                c+=1
            elif c==1:
                name2=k
                rank2=data[k]["Rank"]
                c+=1
            elif c==2:
                name3=k
                rank3=data[k]["Rank"]
                c+=1
            elif c==3:
                name4=k
                rank4=data[k]["Rank"]
                c+=1
            elif c==4:
                name5=k
                rank5=data[k]["Rank"]
                c+=1
            elif c==5:
                name6=k
                rank6=data[k]["Rank"]
                c+=1
            elif c==6:
                name7=k
                rank7=data[k]["Rank"]
                c+=1
            elif c==7:
                name8=k
                rank8=data[k]["Rank"]
                c+=1
            elif c==8:
                name9=k
                rank9=data[k]["Rank"]
                c+=1
            elif c==9:
                name10=k
                rank10=data[k]["Rank"]
                c+=1
            elif c==10:
                name11=k
                rank11=data[k]["Rank"]
                c+=1
            elif c==11:
                name12=k
                rank12=data[k]["Rank"]
                c+=1
            elif c==12:
                name13=k
                rank13=data[k]["Rank"]
                c+=1

    except:
        print("", end='')

window = Tk()
stop_event=threading.Event()

initial_height = 0
target_height = 531
window_width = 555

window.geometry(f"{window_width}x{initial_height}")

job=thesystem.misc.return_status()["status"][1]["job"]

top_val='dailyquest.py'
all_prev=''
video='Video'
transp_clr='#0C679B'

if job!='None':
    top_val=''
    all_prev='alt_'
    video='Alt Video'
    transp_clr='#652AA3'

thesystem.system.make_window_transparent(window,transp_clr)

with open("Files/Settings.json", 'r') as settings_open:
    setting_data=ujson.load(settings_open)

if setting_data["Settings"]["Performernce (ANIME):"] == "True":
    top_images = [f"thesystem/{all_prev}top_bar/{top_val}{str(2).zfill(4)}.png"]
    bottom_images = [f"thesystem/{all_prev}bottom_bar/{str(2).zfill(4)}.png"]

else:
    top_images = [f"thesystem/{all_prev}top_bar/{top_val}{str(i).zfill(4)}.png" for i in range(2, 501, 4)]
    bottom_images = [f"thesystem/{all_prev}bottom_bar/{str(i).zfill(4)}.png" for i in range(2, 501, 4)]

thesystem.system.animate_window_open(window, target_height, window_width, step=30, delay=1)

window.configure(bg = "#FFFFFF")
window.attributes('-alpha',0.8)
window.overrideredirect(True)
window.wm_attributes("-topmost", True)

# Preload top and bottom images
top_preloaded_images = thesystem.system.preload_images(top_images, (580, 38))
bottom_preloaded_images = thesystem.system.preload_images(bottom_images, (580, 33))

subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])

canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 531,
    width = 555,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    277.0,
    595.0,
    image=image_image_1
)

with open("Files/Mod/presets.json", 'r') as pres_file:
    pres_file_data=ujson.load(pres_file)
    normal_font_col=pres_file_data["Anime"]["Normal Font Color"]
    video_path=pres_file_data["Anime"][video]
player = thesystem.system.VideoPlayer(canvas, video_path, 277.0, 350.0, resize_factor=1, pause_duration=0.4)

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    287.0,
    418.0,
    image=image_image_2
)

image_image_3 = PhotoImage(
    file=relative_to_assets("image_3.png"))
image_3 = canvas.create_image(
    274.0,
    70.0,
    image=image_image_3
)

image_image_4 = PhotoImage(
    file=relative_to_assets("image_4.png"))
image_4 = canvas.create_image(
    280.0,
    107.0,
    image=image_image_4
)

canvas.create_text(
    68.0,
    96.0,
    anchor="nw",
    text=name1.upper(),
    fill=thesystem.titleequip.color(name1),
    font=("Montserrat Regular", 18 * -1)
)

canvas.create_text(
    391.0,
    96.0,
    anchor="nw",
    text=f"{rank1}-Rank",
    fill=normal_font_col,
    font=("Montserrat Medium", 18 * -1)
)

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: thesystem.titleequip.final(name1,window),
    relief="flat"
)
button_1.place(
    x=481.0,
    y=95.0,
    width=24.0,
    height=24.0
)

image_image_5 = PhotoImage(
    file=relative_to_assets("image_5.png"))
image_5 = canvas.create_image(
    280.0,
    139.0,
    image=image_image_5
)

canvas.create_text(
    68.0,
    128.0,
    anchor="nw",
    text=name2.upper(),
    fill=thesystem.titleequip.color(name2),
    font=("Montserrat Regular", 18 * -1)
)

canvas.create_text(
    391.0,
    128.0,
    anchor="nw",
    text=f"{rank2}-Rank",
    fill=normal_font_col,
    font=("Montserrat Medium", 18 * -1)
)

button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: thesystem.titleequip.final(name2,window),
    relief="flat"
)
button_2.place(
    x=481.0,
    y=127.0,
    width=24.0,
    height=24.0
)

image_image_6 = PhotoImage(
    file=relative_to_assets("image_6.png"))
image_6 = canvas.create_image(
    280.0,
    171.0,
    image=image_image_6
)

canvas.create_text(
    68.0,
    160.0,
    anchor="nw",
    text=name3.upper(),
    fill=thesystem.titleequip.color(name3),
    font=("Montserrat Regular", 18 * -1)
)

canvas.create_text(
    391.0,
    160.0,
    anchor="nw",
    text=f"{rank3}-Rank",
    fill=normal_font_col,
    font=("Montserrat Medium", 18 * -1)
)

button_image_3 = PhotoImage(
    file=relative_to_assets("button_3.png"))
button_3 = Button(
    image=button_image_3,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: thesystem.titleequip.final(name3,window),
    relief="flat"
)
button_3.place(
    x=481.0,
    y=159.0,
    width=24.0,
    height=24.0
)

image_image_7 = PhotoImage(
    file=relative_to_assets("image_7.png"))
image_7 = canvas.create_image(
    280.0,
    203.0,
    image=image_image_7
)

canvas.create_text(
    68.0,
    192.0,
    anchor="nw",
    text=name4.upper(),
    fill=thesystem.titleequip.color(name4),
    font=("Montserrat Regular", 18 * -1)
)

canvas.create_text(
    391.0,
    192.0,
    anchor="nw",
    text=f"{rank4}-Rank",
    fill=normal_font_col,
    font=("Montserrat Medium", 18 * -1)
)

button_image_4 = PhotoImage(
    file=relative_to_assets("button_4.png"))
button_4 = Button(
    image=button_image_4,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: thesystem.titleequip.final(name4,window),
    relief="flat"
)
button_4.place(
    x=481.0,
    y=191.0,
    width=24.0,
    height=24.0
)

image_image_8 = PhotoImage(
    file=relative_to_assets("image_8.png"))
image_8 = canvas.create_image(
    280.0,
    235.0,
    image=image_image_8
)

canvas.create_text(
    68.0,
    224.0,
    anchor="nw",
    text=name5.upper(),
    fill=thesystem.titleequip.color(name5),
    font=("Montserrat Regular", 18 * -1)
)

canvas.create_text(
    391.0,
    224.0,
    anchor="nw",
    text=f"{rank5}-Rank",
    fill=normal_font_col,
    font=("Montserrat Medium", 18 * -1)
)

button_image_5 = PhotoImage(
    file=relative_to_assets("button_5.png"))
button_5 = Button(
    image=button_image_5,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: thesystem.titleequip.final(name5,window),
    relief="flat"
)
button_5.place(
    x=481.0,
    y=223.0,
    width=24.0,
    height=24.0
)

image_image_9 = PhotoImage(
    file=relative_to_assets("image_9.png"))
image_9 = canvas.create_image(
    280.0,
    267.0,
    image=image_image_9
)

canvas.create_text(
    68.0,
    256.0,
    anchor="nw",
    text=name6.upper(),
    fill=thesystem.titleequip.color(name6),
    font=("Montserrat Regular", 18 * -1)
)

canvas.create_text(
    391.0,
    256.0,
    anchor="nw",
    text=f"{rank6}-Rank",
    fill=normal_font_col,
    font=("Montserrat Medium", 18 * -1)
)

button_image_6 = PhotoImage(
    file=relative_to_assets("button_6.png"))
button_6 = Button(
    image=button_image_6,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: thesystem.titleequip.final(name6,window),
    relief="flat"
)
button_6.place(
    x=481.0,
    y=255.0,
    width=24.0,
    height=24.0
)

image_image_10 = PhotoImage(
    file=relative_to_assets("image_10.png"))
image_10 = canvas.create_image(
    280.0,
    299.0,
    image=image_image_10
)

canvas.create_text(
    68.0,
    288.0,
    anchor="nw",
    text=name7.upper(),
    fill=thesystem.titleequip.color(name7),
    font=("Montserrat Regular", 18 * -1)
)

canvas.create_text(
    391.0,
    288.0,
    anchor="nw",
    text=f"{rank7}-Rank",
    fill=normal_font_col,
    font=("Montserrat Medium", 18 * -1)
)

button_image_7 = PhotoImage(
    file=relative_to_assets("button_7.png"))
button_7 = Button(
    image=button_image_7,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: thesystem.titleequip.final(name7,window),
    relief="flat"
)
button_7.place(
    x=481.0,
    y=287.0,
    width=24.0,
    height=24.0
)

image_image_11 = PhotoImage(
    file=relative_to_assets("image_11.png"))
image_11 = canvas.create_image(
    280.0,
    331.0,
    image=image_image_11
)

canvas.create_text(
    68.0,
    320.0,
    anchor="nw",
    text=name8.upper(),
    fill=thesystem.titleequip.color(name8),
    font=("Montserrat Regular", 18 * -1)
)

canvas.create_text(
    391.0,
    320.0,
    anchor="nw",
    text=f"{rank8}-Rank",
    fill=normal_font_col,
    font=("Montserrat Medium", 18 * -1)
)

button_image_8 = PhotoImage(
    file=relative_to_assets("button_8.png"))
button_8 = Button(
    image=button_image_8,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: thesystem.titleequip.final(name8,window),
    relief="flat"
)
button_8.place(
    x=481.0,
    y=319.0,
    width=24.0,
    height=24.0
)


side = PhotoImage(file=relative_to_assets("blue.png"))
if job.upper()!="NONE":
    side = PhotoImage(file=relative_to_assets("purple.png"))
canvas.create_image(0.0, 197.0, image=side)
canvas.create_image(553.0, 204.0, image=side)

canvas.create_rectangle(
    0.0,
    364.0,
    640.0,
    825.0,
    fill=transp_clr,
    outline="")

canvas.create_rectangle(
    0.0,
    0.0,
    640.0,
    45.0,
    fill=transp_clr,
    outline="")

image_40 = thesystem.system.side_bar("left_bar.png", (52, 333))
canvas.create_image(0.0, 197.0, image=image_40)

canvas.create_rectangle(
    0.0,
    950.0,
    640.0,
    825.0,
    fill=transp_clr,
    outline="")

image_50 = thesystem.system.side_bar("right_bar.png", (52, 320))
canvas.create_image(540.0, 204.0, image=image_50)

image_index = 0
bot_image_index = 0

top_image = canvas.create_image(
    280.0,
    35.0,
    image=top_preloaded_images[image_index]
)

canvas.tag_bind(top_image, "<ButtonPress-1>", start_move)
canvas.tag_bind(top_image, "<B1-Motion>", move_window)

bottom_image = canvas.create_image(
    300.0,
    364.0,
    image=bottom_preloaded_images[bot_image_index]
)

step,delay=1,1

def update_images():
    global image_index, bot_image_index

    # Update top image
    image_index = (image_index + 1) % len(top_preloaded_images)
    canvas.itemconfig(top_image, image=top_preloaded_images[image_index])

    # Update bottom image
    bot_image_index = (bot_image_index + 1) % len(bottom_preloaded_images)
    canvas.itemconfig(bottom_image, image=bottom_preloaded_images[bot_image_index])

    # Schedule next update (24 FPS)
    window.after(1000 // 24, update_images)

# Start the animation
if setting_data["Settings"]["Performernce (ANIME):"] != "True":
    update_thread = threading.Thread(target=update_images)
    update_thread.start()

# =================================================================================================

button_image_9 = PhotoImage(
    file=relative_to_assets("button_0.png"))
button_9 = Button(
    image=button_image_9,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: ex_close(window),
    relief="flat"
)
button_9.place(
    x=481.0,
    y=55.0,
    width=28,
    height=28
)


window.resizable(False, False)
window.mainloop()
