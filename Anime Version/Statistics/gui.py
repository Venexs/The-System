
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
import subprocess
import ujson
import csv
import cv2
from PIL import Image, ImageTk

subprocess.Popen(['python', 'Files\Mod\default\sfx.py'])

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()

window.geometry("468x592")
window.configure(bg = "#FFFFFF")
window.attributes('-alpha',0.8)
window.overrideredirect(True)
window.wm_attributes("-topmost", True)
#window.update()

class VideoPlayer:
    def __init__(self, canvas, video_path, x, y, frame_skip=2, resize_factor=0.8):
        self.canvas = canvas
        self.video_path = video_path
        self.cap = cv2.VideoCapture(video_path)
        self.x = x
        self.y = y
        self.frame_skip = frame_skip  # Number of frames to skip
        self.resize_factor = resize_factor  # Factor to resize frames
        self.image_id = self.canvas.create_image(self.x, self.y)
        self.frame_count = 0
        self.update_frame()

    def update_frame(self):
        ret, frame = self.cap.read()
        
        if not ret:
            # If the video has ended, reset the capture object
            self.cap.set(cv2.CAP_PROP_POS_FRAMES, 0)
            ret, frame = self.cap.read()

        if ret:
            self.frame_count += 1
            if self.frame_count % self.frame_skip == 0:  # Skip frames for performance
                frame = cv2.resize(frame, (0, 0), fx=self.resize_factor, fy=self.resize_factor)
                frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
                img = Image.fromarray(frame)
                imgtk = ImageTk.PhotoImage(image=img)
                self.canvas.itemconfig(self.image_id, image=imgtk)
                self.canvas.imgtk = imgtk

        self.canvas.after(10, self.update_frame)

    def __del__(self):
        self.cap.release()

def ex_close(win):
    win.quit()

def start_move(event):
    global lastx, lasty
    lastx = event.x_root
    lasty = event.y_root

def move_window(event):
    global lastx, lasty
    deltax = event.x_root - lastx
    deltay = event.y_root - lasty
    x = window.winfo_x() + deltax
    y = window.winfo_y() + deltay
    window.geometry("+%s+%s" % (x, y))
    lastx = event.x_root
    lasty = event.y_root

with open("Files/status.json", 'r') as fson:
    data=ujson.load(fson)
    name=data["status"][0]['name'].upper()
    xp_str=data["status"][0]['XP']

with open("Files\Skills\Skill.json", 'r') as skill_fson:
    skill_data=ujson.load(skill_fson)
    rol=list(skill_data.keys())
    num=len(rol)

with open("Files\Data\Streaks.json", 'r') as streak_fson:
    streak_data=ujson.load(streak_fson)
    streak_val=streak_data["Streak"][0]

with open("Files\Data\Statistics.json", 'r') as stats_fson:
    stats_data=ujson.load(stats_fson)
    quest_num=stats_data["Quests"]
    e_rank=stats_data["E Rank"]
    d_rank=stats_data["D Rank"]
    c_rank=stats_data["C Rank"]
    b_rank=stats_data["B Rank"]
    a_rank=stats_data["A Rank"]
    s_rank=stats_data["S Rank"]

    coin_total=stats_data["Coins"]
    str_val=stats_data["STR Points"]
    int_val=stats_data["INT Points"]

    penalties=stats_data["Penaltys"]
    join_date=stats_data["Join"]

    fr_bool=stats_data["False Rank Bool"]
    fr_num=stats_data["False Rank"]


canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 592,
    width = 468,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    321.0,
    307.0,
    image=image_image_1
)

with open("Files\Mod\presets.json", 'r') as pres_file:
    pres_file_data=ujson.load(pres_file)
    video_path=pres_file_data["Anime"]["Video"]
player = VideoPlayer(canvas, video_path, 321.0, 307.0)

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    234.0,
    322.0,
    image=image_image_2
)

image_image_3 = PhotoImage(
    file=relative_to_assets("image_3.png"))
image_3 = canvas.create_image(
    158.0,
    101.0,
    image=image_image_3
)

image_image_4 = PhotoImage(
    file=relative_to_assets("image_4.png"))
image_4 = canvas.create_image(
    234.0,
    150.0,
    image=image_image_4
)

canvas.create_text(
    49.0,
    138.0,
    anchor="nw",
    text=f"[{name}]",
    fill="#FFFFFF",
    font=("Montserrat Regular", 20 * -1)
)

canvas.create_text(
    44.0,
    180.0,
    anchor="nw",
    text=f"Daily Quest Streak: {streak_val}",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1)
)

canvas.create_text(
    44.0,
    197.0,
    anchor="nw",
    text=f"Skills Gained: {num}",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1)
)

canvas.create_text(
    44.0,
    214.0,
    anchor="nw",
    text=f"Total XP Gained: {xp_str}",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1)
)

canvas.create_text(
    44.0,
    231.0,
    anchor="nw",
    text=f"Total Quests Bought: {quest_num}",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1)
)

canvas.create_text(
    44.0,
    248.0,
    anchor="nw",
    text=f"No of. E Rank Quests Done: {e_rank}",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1)
)

canvas.create_text(
    44.0,
    265.0,
    anchor="nw",
    text=f"No of. D Rank Quests Done: {d_rank}",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1)
)

canvas.create_text(
    44.0,
    282.0,
    anchor="nw",
    text=f"No of. C Rank Quests Done: {c_rank}",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1)
)

canvas.create_text(
    44.0,
    299.0,
    anchor="nw",
    text=f"No of. B Rank Quests Done: {b_rank}",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1)
)

canvas.create_text(
    44.0,
    316.0,
    anchor="nw",
    text=f"No of. A Rank Quests Done: {a_rank}",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1)
)

canvas.create_text(
    44.0,
    333.0,
    anchor="nw",
    text=f"No of. S Rank Quests Done: {s_rank}",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1)
)

canvas.create_text(
    44.0,
    367.0,
    anchor="nw",
    text=f"Total Number of Coins You had: {coin_total}",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1)
)

canvas.create_text(
    44.0,
    384.0,
    anchor="nw",
    text=f"Total Number of STR Points You Had: {str_val}",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1)
)

canvas.create_text(
    44.0,
    401.0,
    anchor="nw",
    text=f"Total Number of INT Points You Had: {int_val}",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1)
)

canvas.create_text(
    44.0,
    435.0,
    anchor="nw",
    text=f"Number of Penalties youâ€™ve had: {penalties}",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1)
)

canvas.create_text(
    44.0,
    452.0,
    anchor="nw",
    text=f"Date You Joined: {join_date}",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1)
)

canvas.create_text(
    43.0,
    485.0,
    anchor="nw",
    text=f"FALSE RANKER LEVEL: {fr_num}",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1),
    tags='False Rank',
    state="hidden"
)

image_image_6 = PhotoImage(
    file=relative_to_assets("button_1.png"))
image_6 = canvas.create_image(
    236.0,
    485.5,
    image=image_image_6,
    tags="False Rank",
    state="hidden"
)

if fr_bool=='True':
    canvas.itemconfig("False Rank", state="normal")

img0=canvas.create_rectangle(
    0.0,
    0.0,
    476.0,
    37.0,
    fill="#2E2E2E",
    outline="")

canvas.tag_bind(img0, "<ButtonPress-1>", start_move)
canvas.tag_bind(img0, "<B1-Motion>", move_window)

button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: ex_close(window),
    relief="flat"
)
button_2.place(
    x=436.0,
    y=4.0,
    width=28.0,
    height=28.0
)
window.resizable(False, False)
window.mainloop()
