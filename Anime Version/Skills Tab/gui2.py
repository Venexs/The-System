
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
import ujson
import csv
import subprocess
import random
import cv2
from PIL import Image, ImageTk
import sys
import os

current_dir = os.path.dirname(os.path.abspath(__file__))

project_root = os.path.abspath(os.path.join(current_dir, '../../'))

sys.path.insert(0, project_root)

import thesystem.system

subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH2 = OUTPUT_PATH / Path(r"assets\frame2")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH2 / Path(path)


# ! ============================================================================
window2=Tk()

initial_height = 0
target_height = 251
window_width = 548

window2.geometry(f"{window_width}x{initial_height}")
thesystem.system.animate_window_open(window2, target_height, window_width, step=40, delay=1)

window2.configure(bg = "#FFFFFF")
window2.attributes('-alpha',0.8)
window2.overrideredirect(True)
window2.wm_attributes("-topmost", True)

def start_move(event):
    global lastx, lasty
    lastx = event.x_root
    lasty = event.y_root

def move_window(event):
    global lastx, lasty
    deltax = event.x_root - lastx
    deltay = event.y_root - lasty
    x = window2.winfo_x() + deltax
    y = window2.winfo_y() + deltay
    window2.geometry("+%s+%s" % (x, y))
    lastx = event.x_root
    lasty = event.y_root

def ex_close(win):
    subprocess.Popen(['python', 'Anime Version/Skills Tab/gui.py'])
    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
    thesystem.system.animate_window_close(win, target_height, window_width, step=40, delay=1)
    win.quit()

name1=name2=name3=name4='-'
lvl1=lvl2=lvl3=lvl4='??'

with open("Files/Skills/Skill.json", 'r') as fson:
    c=0
    try:
        data=ujson.load(fson)
        data_key=list(data.keys())
        for k in data_key:
            if data[k][0]["type"]=='Job':
                if c==0:
                    name1=k
                    lvl1=data[k][0]["lvl"]
                    c+=1
                elif c==1:
                    name2=k
                    lvl2=data[k][0]["lvl"]
                    c+=1
                elif c==2:
                    name3=k
                    lvl3=data[k][0]["lvl"]
                    c+=1
                elif c==3:
                    name4=k
                    lvl4=data[k][0]["lvl"]
                    c+=1
    except:
        print()

def open_prog(name):
    if name!='-':
        with open("Files/Temp Files/Skill Temp.csv", 'w', newline='') as csv_open:
            fw=csv.writer(csv_open)
            rec=[name]
            fw.writerow(rec)

        subprocess.Popen(['python', 'Anime Version/Skill Info/gui.py'])

        window2.quit()

canvas2=Canvas(
    window2,
    bg = "#FFFFFF",
    height = 251,
    width = 548,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas2.place(x = 0, y = 0)
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas2.create_image(
    603.0,
    447.0,
    image=image_image_1
)

with open("Files/Mod/presets.json", 'r') as pres_file:
    pres_file_data=ujson.load(pres_file)
    video_path=pres_file_data["Anime"]["Video"]
player = thesystem.system.VideoPlayer(canvas2, video_path, 603.0, 447.0)

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas2.create_image(
    288.0,
    435.0,
    image=image_image_2
)

image_image_3 = PhotoImage(
    file=relative_to_assets("image_3.png"))
image_3 = canvas2.create_image(
    236.0,
    62.0,
    image=image_image_3
)

image_image_4 = PhotoImage(
    file=relative_to_assets("image_4.png"))
image_4 = canvas2.create_image(
    281.0,
    215.0,
    image=image_image_4
)

canvas2.create_text(
    69.0,
    204.0,
    anchor="nw",
    text=name4,
    fill="#FFFFFF",
    font=("Montserrat Regular", 18 * -1)
)

canvas2.create_text(
    407.0,
    204.0,
    anchor="nw",
    text=f"Lvl.{lvl4}",
    fill="#FFFFFF",
    font=("Montserrat Medium", 18 * -1)
)

button_image_3 = PhotoImage(
    file=relative_to_assets("button_3.png"))
button_3 = Button(
    image=button_image_3,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: open_prog(name4),
    relief="flat"
)
button_3.place(
    x=481.0,
    y=203.0,
    width=24.0,
    height=24.0
)

image_image_7 = PhotoImage(
    file=relative_to_assets("image_7.png"))
image_7 = canvas2.create_image(
    281.0,
    183.0,
    image=image_image_7
)

canvas2.create_text(
    69.0,
    172.0,
    anchor="nw",
    text=name3,
    fill="#FFFFFF",
    font=("Montserrat Regular", 18 * -1)
)

canvas2.create_text(
    407.0,
    172.0,
    anchor="nw",
    text=f"Lvl.{lvl3}",
    fill="#FFFFFF",
    font=("Montserrat Medium", 18 * -1)
)

button_image_4 = PhotoImage(
    file=relative_to_assets("button_4.png"))
button_4 = Button(
    image=button_image_4,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: open_prog(name3),
    relief="flat"
)
button_4.place(
    x=481.0,
    y=171.0,
    width=24.0,
    height=24.0
)

image_image_8 = PhotoImage(
    file=relative_to_assets("image_8.png"))
image_8 = canvas2.create_image(
    281.0,
    151.0,
    image=image_image_8
)

canvas2.create_text(
    69.0,
    140.0,
    anchor="nw",
    text=name2,
    fill="#FFFFFF",
    font=("Montserrat Regular", 18 * -1)
)

canvas2.create_text(
    407.0,
    140.0,
    anchor="nw",
    text=f"Lvl.{lvl2}",
    fill="#FFFFFF",
    font=("Montserrat Medium", 18 * -1)
)

button_image_5 = PhotoImage(
    file=relative_to_assets("button_5.png"))
button_5 = Button(
    image=button_image_5,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: open_prog(name2),
    relief="flat"
)
button_5.place(
    x=481.0,
    y=139.0,
    width=24.0,
    height=24.0
)

image_image_9 = PhotoImage(
    file=relative_to_assets("image_4.png"))
image_9 = canvas2.create_image(
    281.0,
    119.0,
    image=image_image_9
)

canvas2.create_text(
    69.0,
    108.0,
    anchor="nw",
    text=name1,
    fill="#FFFFFF",
    font=("Montserrat Regular", 18 * -1)
)

canvas2.create_text(
    407.0,
    108.0,
    anchor="nw",
    text=f"Lvl.{lvl1}",
    fill="#FFFFFF",
    font=("Montserrat Medium", 18 * -1)
)

button_image_6 = PhotoImage(
    file=relative_to_assets("button_4.png"))
button_6 = Button(
    image=button_image_6,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: open_prog(name1),
    relief="flat"
)
button_6.place(
    x=481.0,
    y=107.0,
    width=24.0,
    height=24.0
)

image_0=canvas2.create_rectangle(
    0.0,
    0.0,
    960.0,
    37.0,
    fill="#2E2E2E",
    outline="")

canvas2.tag_bind(image_0, "<ButtonPress-1>", start_move)
canvas2.tag_bind(image_0, "<B1-Motion>", move_window)

button_image_0 = PhotoImage(
    file=relative_to_assets("button_0.png"))
button_0 = Button(
    image=button_image_0,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: ex_close(window2),
    relief="flat"
)
button_0.place(
    x=510.0,
    y=4.0,
    width=28.0,
    height=28.0
)

window2.resizable(False, False)
window2.mainloop()