
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
import subprocess
import cv2
from PIL import Image, ImageTk
import ujson
import sys
import os

current_dir = os.path.dirname(os.path.abspath(__file__))

project_root = os.path.abspath(os.path.join(current_dir, '../../'))

sys.path.insert(0, project_root)

import thesystem.system

subprocess.Popen(['python', 'Files\Mod\default\sfx.py'])

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame3")

with open("Files/Tabs.json",'r') as tab_son:
    tab_son_data=ujson.load(tab_son)

with open("Files/Tabs.json",'w') as fin_tab_son:
    tab_son_data["Skill"]='Open'
    ujson.dump(tab_son_data,fin_tab_son,indent=4)

def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

window = Tk()

initial_height = 0
target_height = 361
window_width = 593

window.geometry(f"{window_width}x{initial_height}")
thesystem.system.animate_window_open(window, target_height, window_width, step=40, delay=1)

window.configure(bg = "#FFFFFF")
window.attributes('-alpha',0.8)
window.overrideredirect(True)
window.wm_attributes("-topmost", True)
thesystem.system.make_window_transparent(window)

def start_move(event):
    global lastx, lasty
    lastx = event.x_root
    lasty = event.y_root

def move_window(event):
    global lastx, lasty
    deltax = event.x_root - lastx
    deltay = event.y_root - lasty
    x = window.winfo_x() + deltax
    y = window.winfo_y() + deltay
    window.geometry("+%s+%s" % (x, y))
    lastx = event.x_root
    lasty = event.y_root

def ex_close(win):
    with open("Files/Tabs.json",'r') as tab_son:
        tab_son_data=ujson.load(tab_son)

    with open("Files/Tabs.json",'w') as fin_tab_son:
        tab_son_data["Skill"]='Close'
        ujson.dump(tab_son_data,fin_tab_son,indent=4)
    thesystem.system.animate_window_close(window, target_height, window_width, step=40, delay=1)
    subprocess.Popen(['python', 'Files\Mod\default\sfx_close.py'])
    win.quit()


def job():
    subprocess.Popen(['python', 'Anime Version/Skills Tab/gui2.py'])

    ex_close(window)

def active():
    subprocess.Popen(['python', 'Anime Version/Skills Tab/gui1.py'])

    ex_close(window)

def passive():
    subprocess.Popen(['python', 'Anime Version/Skills Tab/gui4.py'])

    ex_close(window)


canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 361,
    width = 593,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    625.0,
    926.0,
    image=image_image_1
)

with open("Files\Mod\presets.json", 'r') as pres_file:
    pres_file_data=ujson.load(pres_file)
    video_path=pres_file_data["Anime"]["Video"]
player = thesystem.system.VideoPlayer(canvas, video_path, 603.0, 247.0)

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    314.0,
    450.0,
    image=image_image_2
)

image_image_3 = PhotoImage(
    file=relative_to_assets("image_3.png"))
image_3 = canvas.create_image(
    304.0,
    87.0,
    image=image_image_3
)

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: passive(),
    relief="flat"
)
button_1.place(
    x=74.0,
    y=131.0,
    width=459.0,
    height=30.0
)

button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: active(),
    relief="flat"
)
button_2.place(
    x=74.0,
    y=185.0,
    width=459.0,
    height=30.0
)

button_image_3 = PhotoImage(
    file=relative_to_assets("button_3.png"))
button_3 = Button(
    image=button_image_3,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: job(),
    relief="flat"
)
button_3.place(
    x=74.0,
    y=239.0,
    width=459.0,
    height=30.0
)

canvas.create_rectangle(
    28.0,
    0.0,
    194.0,
    16.0,
    fill="#0c679b",
    outline="")

canvas.create_rectangle(
    0.0,
    336.0,
    667.0,
    361.0,
    fill="#0c679b",
    outline="")

image_image_4 = PhotoImage(
    file=relative_to_assets("image_4.png"))
image_4 = canvas.create_image(
    8.9461669921875,
    172.6181182861328,
    image=image_image_4
)

image_image_5 = PhotoImage(
    file=relative_to_assets("image_5.png"))
image_5 = canvas.create_image(
    590.0,
    188.0,
    image=image_image_5
)

canvas.create_rectangle(
    138.0,
    0.0,
    633.0,
    23.0,
    fill="#0c679b",
    outline="")

image_image_6 = PhotoImage(
    file=relative_to_assets("image_6.png"))
image_6 = canvas.create_image(
    306.0,
    13.0,
    image=image_image_6
)

canvas.tag_bind(image_6, "<ButtonPress-1>", start_move)
canvas.tag_bind(image_6, "<B1-Motion>", move_window)

image_image_7 = PhotoImage(
    file=relative_to_assets("image_7.png"))
image_7 = canvas.create_image(
    290.0,
    330.0,
    image=image_image_7
)

button_image_4 = PhotoImage(
    file=relative_to_assets("button_4.png"))
button_4 = Button(
    image=button_image_4,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: ex_close(window),
    relief="flat"
)
button_4.place(
    x=533.0,
    y=39.0,
    width=20.0,
    height=20.0
)
window.resizable(False, False)
window.mainloop()
