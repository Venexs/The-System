
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer
# Fork by Venexs


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
import ujson
import csv
import subprocess
import threading
import cv2
from PIL import Image, ImageTk
import sys
import os

current_dir = os.path.dirname(os.path.abspath(__file__))

project_root = os.path.abspath(os.path.join(current_dir, '../../'))

sys.path.insert(0, project_root)

import thesystem.system


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")

with open("Files/Player Data/Tabs.json",'r') as tab_son:
    tab_son_data=ujson.load(tab_son)

with open("Files/Player Data/Tabs.json",'w') as fin_tab_son:
    tab_son_data["Skill"]='Open'
    ujson.dump(tab_son_data,fin_tab_son,indent=4)

def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

window = Tk()

def ex_close(win):
    with open("Files/Player Data/Tabs.json",'r') as tab_son:
        tab_son_data=ujson.load(tab_son)

    with open("Files/Player Data/Tabs.json",'w') as fin_tab_son:
        tab_son_data["Skill"]='Close'
        ujson.dump(tab_son_data,fin_tab_son,indent=4)
    thesystem.system.animate_window_close(window, target_height, window_width, step=40, delay=1)
    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
    win.quit()

stop_event=threading.Event()

window.geometry("488x0")  # Initial collapsed height
window.configure(bg="#FFFFFF")
window.attributes('-alpha', 0.8)
window.overrideredirect(True)
window.wm_attributes("-topmost", True)

job=thesystem.misc.return_status()["status"][1]["job"]

top_val='dailyquest.py'
all_prev=''
video='Video'
transp_clr='#0C679B'

if job!='None':
    top_val=''
    all_prev='alt_'
    video='Alt Video'
    transp_clr='#652AA3'

thesystem.system.make_window_transparent(window, transp_clr)

# Animate window open
window_width = 488
target_height = 716

thesystem.system.animate_window_open(window, target_height, window_width, step=50, delay=1)

with open("Files/Player Data/Settings.json", 'r') as settings_open:
    setting_data=ujson.load(settings_open)

if setting_data["Settings"]["Performernce (ANIME):"] == "True":
    top_images = [f"thesystem/{all_prev}top_bar/{top_val}{str(2).zfill(4)}.png"]
    bottom_images = [f"thesystem/{all_prev}bottom_bar/{str(2).zfill(4)}.png"]

else:
    top_images = [f"thesystem/{all_prev}top_bar/{top_val}{str(i).zfill(4)}.png" for i in range(2, 501, 4)]
    bottom_images = [f"thesystem/{all_prev}bottom_bar/{str(i).zfill(4)}.png" for i in range(2, 501, 4)]

# Preload top and bottom images
top_preloaded_images = thesystem.system.preload_images(top_images, (488, 38))
bottom_preloaded_images = thesystem.system.preload_images(bottom_images, (609, 33))

subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])

presets_data = thesystem.misc.load_ujson("Files/Mod/presets.json")

def start_move(event):
    window.lastx, window.lasty = event.widget.winfo_pointerxy()

def move_window(event):
    x_root, y_root = event.widget.winfo_pointerxy()
    deltax, deltay = x_root - window.lastx, y_root - window.lasty

    if deltax != 0 or deltay != 0:  # Update only if there is actual movement
        window.geometry(f"+{window.winfo_x() + deltax}+{window.winfo_y() + deltay}")
        window.lastx, window.lasty = x_root, y_root

canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 716,
    width = 488,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    734.0,
    581.0,
    image=image_image_1
)

canvas.create_image(430.0, 363.0, image=PhotoImage(file=relative_to_assets("image_1.png")))
player = thesystem.system.VideoPlayer(canvas, presets_data["Anime"][video], 430.0, 363.0, resize_factor=0.3, pause_duration=0.7)

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    237.0,
    367.0,
    image=image_image_2
)

image_image_3 = PhotoImage(
    file=relative_to_assets("image_3.png"))
image_3 = canvas.create_image(
    244.0,
    89.0,
    image=image_image_3
)

def open_prog(name):
    if name!='-':
        with open("Files/Temp Files/Skill Temp.csv", 'w', newline='') as csv_open:
            fw=csv.writer(csv_open)
            rec=[name]
            fw.writerow(rec)

        subprocess.Popen(['python', 'Anime Version/Skill Info/gui.py'])

        ex_close(window)

aname1=aname2=aname3=aname4=aname5=aname6=aname7='-'
lvl1=lvl2=lvl3=lvl4=lvl5=lvl6=lvl7='??'

with open("Files/Player Data/Skill.json", 'r') as fson:
    c=0
    try:
        data=ujson.load(fson)
        data_key=list(data.keys())
        for k in data_key:
            if data[k][0]["type"]=='Active':
                if c==0:
                    aname1=k
                    lvl1="Lvl."+str(data[k][0]["lvl"])
                    c+=1
                elif c==1:
                    aname2=k
                    lvl2="Lvl."+str(data[k][0]["lvl"])
                    c+=1
                elif c==2:
                    aname3=k
                    lvl3="Lvl."+str(data[k][0]["lvl"])
                    c+=1
                elif c==3:
                    aname4=k
                    lvl4="Lvl."+str(data[k][0]["lvl"])
                    c+=1
                elif c==4:
                    aname5=k
                    lvl5="Lvl."+str(data[k][0]["lvl"])
                    c+=1
                elif c==5:
                    aname6=k
                    lvl6="Lvl."+str(data[k][0]["lvl"])
                    c+=1
                elif c==6:
                    aname7=k
                    lvl7="Lvl."+str(data[k][0]["lvl"])
                    c+=1
    except:
        print()

canvas.create_text(
    59.0,
    123.0,
    anchor="nw",
    text="ACTIVE SKILLS",
    fill="#FFFFFF",
    font=("Exo Bold", 20 * -1)
)

image_image_8 = PhotoImage(
    file=relative_to_assets("image_8.png"))
image_8 = canvas.create_image(
    234.0,
    162.0,
    image=image_image_8
)

canvas.create_text(
    63.0,
    151.0-2,
    anchor="nw",
    text=f"{aname1}",
    fill="#FFFFFF",
    font=("Montserrat Regular", 17 * -1)
)

canvas.create_text(
    311.0,
    151.0-2,
    anchor="nw",
    text=f"{lvl1}",
    fill="#FFFFFF",
    font=("Montserrat Bold", 18 * -1)
)

button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: open_prog(aname1),
    relief="flat"
)
button_2.place(
    x=386.0,
    y=152.0,
    width=20.0,
    height=20.0
)

image_image_9 = PhotoImage(
    file=relative_to_assets("image_9.png"))
image_9 = canvas.create_image(
    234.0,
    189.0,
    image=image_image_9
)

canvas.create_text(
    63.0,
    178.0-2,
    anchor="nw",
    text=aname2,
    fill="#FFFFFF",
    font=("Montserrat Regular", 17 * -1)
)

canvas.create_text(
    311.0,
    178.0-2,
    anchor="nw",
    text=lvl2,
    fill="#FFFFFF",
    font=("Montserrat Bold", 18 * -1)
)

button_image_3 = PhotoImage(
    file=relative_to_assets("button_3.png"))
button_3 = Button(
    image=button_image_3,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: open_prog(aname2),
    relief="flat"
)
button_3.place(
    x=386.0,
    y=179.0,
    width=20.0,
    height=20.0
)

image_image_10 = PhotoImage(
    file=relative_to_assets("image_10.png"))
image_10 = canvas.create_image(
    234.0,
    216.0,
    image=image_image_10
)

canvas.create_text(
    63.0,
    205.0-2,
    anchor="nw",
    text=aname3,
    fill="#FFFFFF",
    font=("Montserrat Regular", 17 * -1)
)

canvas.create_text(
    311.0,
    205.0-2,
    anchor="nw",
    text=lvl3,
    fill="#FFFFFF",
    font=("Montserrat Bold", 18 * -1)
)

button_image_4 = PhotoImage(
    file=relative_to_assets("button_4.png"))
button_4 = Button(
    image=button_image_4,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: open_prog(aname3),
    relief="flat"
)
button_4.place(
    x=386.0,
    y=206.0,
    width=20.0,
    height=20.0
)

image_image_11 = PhotoImage(
    file=relative_to_assets("image_11.png"))
image_11 = canvas.create_image(
    234.0,
    243.0,
    image=image_image_11
)

canvas.create_text(
    63.0,
    232.0-2,
    anchor="nw",
    text=aname4,
    fill="#FFFFFF",
    font=("Montserrat Regular", 17 * -1)
)

canvas.create_text(
    311.0,
    232.0-2,
    anchor="nw",
    text=lvl4,
    fill="#FFFFFF",
    font=("Montserrat Bold", 18 * -1)
)

button_image_5 = PhotoImage(
    file=relative_to_assets("button_5.png"))
button_5 = Button(
    image=button_image_5,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: open_prog(aname4),
    relief="flat"
)
button_5.place(
    x=386.0,
    y=233.0,
    width=20.0,
    height=20.0
)

image_image_12 = PhotoImage(
    file=relative_to_assets("image_12.png"))
image_12 = canvas.create_image(
    234.0,
    270.0,
    image=image_image_12
)

canvas.create_text(
    63.0,
    259.0-2,
    anchor="nw",
    text=aname5,
    fill="#FFFFFF",
    font=("Montserrat Regular", 17 * -1)
)

canvas.create_text(
    311.0,
    259.0-2,
    anchor="nw",
    text=lvl5,
    fill="#FFFFFF",
    font=("Montserrat Bold", 18 * -1)
)

button_image_6 = PhotoImage(
    file=relative_to_assets("button_6.png"))
button_6 = Button(
    image=button_image_6,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: open_prog(aname5),
    relief="flat"
)
button_6.place(
    x=386.0,
    y=260.0,
    width=20.0,
    height=20.0
)

image_image_13 = PhotoImage(
    file=relative_to_assets("image_13.png"))
image_13 = canvas.create_image(
    234.0,
    297.0,
    image=image_image_13
)

canvas.create_text(
    63.0,
    286.0-2,
    anchor="nw",
    text=aname6,
    fill="#FFFFFF",
    font=("Montserrat Regular", 17 * -1)
)

canvas.create_text(
    311.0,
    286.0-2,
    anchor="nw",
    text=lvl6,
    fill="#FFFFFF",
    font=("Montserrat Bold", 18 * -1)
)

button_image_7 = PhotoImage(
    file=relative_to_assets("button_7.png"))
button_7 = Button(
    image=button_image_7,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: open_prog(aname6),
    relief="flat"
)
button_7.place(
    x=386.0,
    y=287.0,
    width=20.0,
    height=20.0
)

image_image_14 = PhotoImage(
    file=relative_to_assets("image_14.png"))
image_14 = canvas.create_image(
    234.0,
    324.0,
    image=image_image_14
)

canvas.create_text(
    63.0,
    313.0-2,
    anchor="nw",
    text=aname7,
    fill="#FFFFFF",
    font=("Montserrat Regular", 17 * -1)
)

canvas.create_text(
    311.0,
    313.0-2,
    anchor="nw",
    text=lvl7,
    fill="#FFFFFF",
    font=("Montserrat Bold", 18 * -1)
)

button_image_8 = PhotoImage(
    file=relative_to_assets("button_8.png"))
button_8 = Button(
    image=button_image_8,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: open_prog(aname7),
    relief="flat"
)
button_8.place(
    x=386.0,
    y=314.0,
    width=20.0,
    height=20.0
)

pname1=pname2=pname3=pname4=pname5='-'
plvl1=plvl2=plvl3=plvl4=plvl5='??'

with open("Files/Player Data/Skill.json", 'r') as fson:
    c=0
    try:
        data=ujson.load(fson)
        data_key=list(data.keys())
        for k in data_key:
            if data[k][0]["type"]=='Passive':
                if c==0:
                    pname1=k
                    plvl1="Lvl."+str(data[k][0]["lvl"])
                    c+=1
                elif c==1:  
                    pname2=k
                    plvl2="Lvl."+str(data[k][0]["lvl"])
                    c+=1
                elif c==2:
                    pname3=k
                    plvl3="Lvl."+str(data[k][0]["lvl"])
                    c+=1
                elif c==3:
                    pname4=k
                    plvl4="Lvl."+str(data[k][0]["lvl"])
                    c+=1
                elif c==4:
                    pname5=k
                    plvl5="Lvl."+str(data[k][0]["lvl"])
                    c+=1
    except:
        print()

canvas.create_text(
    59.0,
    346.0,
    anchor="nw",
    text="PASSIVE SKILLS",
    fill="#FFFFFF",
    font=("Exo Bold", 20 * -1)
)

image_image_15 = PhotoImage(
    file=relative_to_assets("image_15.png"))
image_15 = canvas.create_image(
    234.0,
    382.0,
    image=image_image_15
)

canvas.create_text(
    63.0,
    371.0-2,
    anchor="nw",
    text=pname1,
    fill="#FFFFFF",
    font=("Montserrat Regular", 17 * -1)
)

canvas.create_text(
    311.0,
    371.0-2,
    anchor="nw",
    text=plvl1,
    fill="#FFFFFF",
    font=("Montserrat Bold", 18 * -1)
)

button_image_9 = PhotoImage(
    file=relative_to_assets("button_9.png"))
button_9 = Button(
    image=button_image_9,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: open_prog(pname1),
    relief="flat"
)
button_9.place(
    x=386.0,
    y=372.0,
    width=20.0,
    height=20.0
)

image_image_16 = PhotoImage(
    file=relative_to_assets("image_16.png"))
image_16 = canvas.create_image(
    234.0,
    409.0,
    image=image_image_16
)

canvas.create_text(
    63.0,
    398.0-2,
    anchor="nw",
    text=pname2,
    fill="#FFFFFF",
    font=("Montserrat Regular", 17 * -1)
)

canvas.create_text(
    311.0,
    398.0-2,
    anchor="nw",
    text=plvl2,
    fill="#FFFFFF",
    font=("Montserrat Bold", 18 * -1)
)

button_image_10 = PhotoImage(
    file=relative_to_assets("button_10.png"))
button_10 = Button(
    image=button_image_10,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: open_prog(pname2),
    relief="flat"
)
button_10.place(
    x=386.0,
    y=399.0,
    width=20.0,
    height=20.0
)

image_image_17 = PhotoImage(
    file=relative_to_assets("image_17.png"))
image_17 = canvas.create_image(
    234.0,
    436.0,
    image=image_image_17
)

canvas.create_text(
    63.0,
    425.0-2,
    anchor="nw",
    text=pname3,
    fill="#FFFFFF",
    font=("Montserrat Regular", 17 * -1)
)

canvas.create_text(
    311.0,
    425.0-2,
    anchor="nw",
    text=plvl3,
    fill="#FFFFFF",
    font=("Montserrat Bold", 18 * -1)
)

button_image_11 = PhotoImage(
    file=relative_to_assets("button_11.png"))
button_11 = Button(
    image=button_image_11,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: open_prog(pname3),
    relief="flat"
)
button_11.place(
    x=386.0,
    y=426.0,
    width=20.0,
    height=20.0
)

image_image_18 = PhotoImage(
    file=relative_to_assets("image_18.png"))
image_18 = canvas.create_image(
    234.0,
    463.0,
    image=image_image_18
)

canvas.create_text(
    63.0,
    452.0-2,
    anchor="nw",
    text=pname4,
    fill="#FFFFFF",
    font=("Montserrat Regular", 17 * -1)
)

canvas.create_text(
    311.0,
    452.0-2,
    anchor="nw",
    text=plvl4,
    fill="#FFFFFF",
    font=("Montserrat Bold", 18 * -1)
)

button_image_12 = PhotoImage(
    file=relative_to_assets("button_12.png"))
button_12 = Button(
    image=button_image_12,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: open_prog(pname4),
    relief="flat"
)
button_12.place(
    x=386.0,
    y=453.0,
    width=20.0,
    height=20.0
)

image_image_19 = PhotoImage(
    file=relative_to_assets("image_19.png"))
image_19 = canvas.create_image(
    234.0,
    490.0,
    image=image_image_19
)

canvas.create_text(
    63.0,
    479.0-2,
    anchor="nw",
    text=pname5,
    fill="#FFFFFF",
    font=("Montserrat Regular", 17 * -1)
)

canvas.create_text(
    311.0,
    479.0-2,
    anchor="nw",
    text=plvl5,
    fill="#FFFFFF",
    font=("Montserrat Bold", 18 * -1)
)

button_image_13 = PhotoImage(
    file=relative_to_assets("button_13.png"))
button_13 = Button(
    image=button_image_13,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: open_prog(pname5),
    relief="flat"
)
button_13.place(
    x=386.0,
    y=480.0,
    width=20.0,
    height=20.0
)

jname1=jname2=jname3=jname4='-'
jlvl1=jlvl2=jlvl3=jlvl4='??'

with open("Files/Player Data/Skill.json", 'r') as fson:
    c=0
    try:
        data=ujson.load(fson)
        data_key=list(data.keys())
        for k in data_key:
            if data[k][0]["type"]=='Job':
                if c==0:
                    jname1=k
                    jvl1="Lvl."+str(data[k][0]["lvl"])
                    c+=1
                elif c==1:
                    jname2=k
                    jlvl2="Lvl."+str(data[k][0]["lvl"])
                    c+=1
                elif c==2:
                    jname3=k
                    jlvl3="Lvl."+str(data[k][0]["lvl"])
                    c+=1
                elif c==3:
                    jname4=k
                    jlvl4="Lvl."+str(data[k][0]["lvl"])
                    c+=1
    except:
        print()

canvas.create_text(
    59.0,
    513.0,
    anchor="nw",
    text="JOB SKILLS",
    fill="#FFFFFF",
    font=("Exo Bold", 20 * -1)
)

image_image_20 = PhotoImage(
    file=relative_to_assets("image_20.png"))
image_20 = canvas.create_image(
    234.0,
    549.0,
    image=image_image_20
)

canvas.create_text(
    63.0,
    538.0-2,
    anchor="nw",
    text=jname1,
    fill="#FFFFFF",
    font=("Montserrat Regular", 17 * -1)
)

canvas.create_text(
    311.0,
    538.0-2,
    anchor="nw",
    text=jlvl1,
    fill="#FFFFFF",
    font=("Montserrat Bold", 18 * -1)
)

button_image_14 = PhotoImage(
    file=relative_to_assets("button_14.png"))
button_14 = Button(
    image=button_image_14,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: open_prog(jname1),
    relief="flat"
)
button_14.place(
    x=386.0,
    y=539.0,
    width=20.0,
    height=20.0
)

image_image_21 = PhotoImage(
    file=relative_to_assets("image_21.png"))
image_21 = canvas.create_image(
    234.0,
    576.0,
    image=image_image_21
)

canvas.create_text(
    63.0,
    565.0-2,
    anchor="nw",
    text=jname2,
    fill="#FFFFFF",
    font=("Montserrat Regular", 17 * -1)
)

canvas.create_text(
    311.0,
    565.0-2,
    anchor="nw",
    text=jlvl2,
    fill="#FFFFFF",
    font=("Montserrat Bold", 18 * -1)
)

button_image_15 = PhotoImage(
    file=relative_to_assets("button_15.png"))
button_15 = Button(
    image=button_image_15,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: open_prog(jname2),
    relief="flat"
)
button_15.place(
    x=386.0,
    y=566.0,
    width=20.0,
    height=20.0
)

image_image_22 = PhotoImage(
    file=relative_to_assets("image_22.png"))
image_22 = canvas.create_image(
    234.0,
    603.0,
    image=image_image_22
)

canvas.create_text(
    63.0,
    592.0-2,
    anchor="nw",
    text=jname3,
    fill="#FFFFFF",
    font=("Montserrat Regular", 17 * -1)
)

canvas.create_text(
    311.0,
    592.0-2,
    anchor="nw",
    text=jlvl3,
    fill="#FFFFFF",
    font=("Montserrat Bold", 18 * -1)
)

button_image_16 = PhotoImage(
    file=relative_to_assets("button_16.png"))
button_16 = Button(
    image=button_image_16,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: open_prog(jname3),
    relief="flat"
)
button_16.place(
    x=386.0,
    y=593.0,
    width=20.0,
    height=20.0
)

image_image_23 = PhotoImage(
    file=relative_to_assets("image_23.png"))
image_23 = canvas.create_image(
    234.0,
    630.0,
    image=image_image_23
)

canvas.create_text(
    63.0,
    619.0-2,
    anchor="nw",
    text=jname4,
    fill="#FFFFFF",
    font=("Montserrat Regular", 17 * -1)
)

canvas.create_text(
    311.0,
    619.0-2,
    anchor="nw",
    text=jlvl4,
    fill="#FFFFFF",
    font=("Montserrat Bold", 18 * -1)
)

button_image_17 = PhotoImage(
    file=relative_to_assets("button_17.png"))
button_17 = Button(
    image=button_image_17,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: open_prog(jname4),
    relief="flat"
)
button_17.place(
    x=386.0,
    y=620.0,
    width=20.0,
    height=20.0
)

side = PhotoImage(file=relative_to_assets("blue.png"))
if job.upper()!="NONE":
    side = PhotoImage(file=relative_to_assets("purple.png"))

canvas.create_image(-15.0, 348.0, image=side)
canvas.create_image(490.0, 351.0, image=side)

canvas.create_rectangle(
    0.0,
    0.0,
    101.0,
    21.0,
    fill=transp_clr,
    outline="")

canvas.create_rectangle(
    0.0,
    678.0,
    494.0,
    716.0,
    fill=transp_clr,
    outline="")

canvas.create_rectangle(
    0.0,
    0.0,
    488.0,
    34.0,
    fill=transp_clr,
    outline="")

image_40 = thesystem.system.side_bar("left_bar.png", (101, 659))
canvas.create_image(0.0, 352.0, image=image_40)

image_50 = thesystem.system.side_bar("right_bar.png", (80, 653))
canvas.create_image(462.0, 351.0, image=image_50)

image_index = 0
bot_image_index = 0

top_image = canvas.create_image(
    244.0,
    19.0,
    image=top_preloaded_images[image_index]
)

canvas.tag_bind(top_image, "<ButtonPress-1>", start_move)
canvas.tag_bind(top_image, "<B1-Motion>", move_window)

bottom_image = canvas.create_image(
    295.0,
    680.0,
    image=bottom_preloaded_images[bot_image_index]
)

step,delay=1,1

def update_images():
    global image_index, bot_image_index

    # Update top image
    image_index = (image_index + 1) % len(top_preloaded_images)
    canvas.itemconfig(top_image, image=top_preloaded_images[image_index])

    # Update bottom image
    bot_image_index = (bot_image_index + 1) % len(bottom_preloaded_images)
    canvas.itemconfig(bottom_image, image=bottom_preloaded_images[bot_image_index])

    # Schedule next update (24 FPS)
    window.after(1000 // 24, update_images)

if setting_data["Settings"]["Performernce (ANIME):"] != "True":
    update_thread = threading.Thread(target=update_images)
    update_thread.start()

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: ex_close(window),
    relief="flat"
)
button_1.place(
    x=396.0,
    y=55.0,
    width=20.0,
    height=20.0
)

window.resizable(False, False)
window.mainloop()
