
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
import subprocess
import threading
import ujson
import csv
import cv2
from PIL import Image, ImageTk
import sys
import os
import numpy as np

current_dir = os.path.dirname(os.path.abspath(__file__))

project_root = os.path.abspath(os.path.join(current_dir, '../../'))

sys.path.insert(0, project_root)

import thesystem.system

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")

with open("Files/Player Data/Tabs.json",'r') as tab_son:
    tab_son_data=ujson.load(tab_son)

with open("Files/Player Data/Tabs.json",'w') as fin_tab_son:
    tab_son_data["Shop"]='Open'
    ujson.dump(tab_son_data,fin_tab_son,indent=4)

def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()

stop_event=threading.Event()

initial_height = 0
target_height = 760
window_width = 555

window.geometry(f"{window_width}x{initial_height}")
thesystem.system.animate_window_open(window, target_height, window_width, step=50, delay=1)

window.configure(bg = "#FFFFFF")
set_data=thesystem.misc.return_settings()
transp_value=set_data["Settings"]["Transparency"]

window.attributes('-alpha',transp_value)
window.overrideredirect(True)
window.wm_attributes("-topmost", True)

job=thesystem.misc.return_status()["status"][1]["job"]

top_val='dailyquest.py'
all_prev=''
video='Video'
transp_clr='#0C679B'

if job!='None':
    top_val=''
    all_prev='alt_'
    video='Alt Video'
    transp_clr='#652AA3'

thesystem.system.make_window_transparent(window,transp_clr)

with open("Files/Player Data/Settings.json", 'r') as settings_open:
    setting_data=ujson.load(settings_open)

top_images = f"thesystem/{all_prev}top_bar"
bottom_images = f"thesystem/{all_prev}bottom_bar"

top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (550, 38), job, type_="top")
bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (550, 33), job, type_="bottom")

subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])

def start_move(event):
    window.lastx, window.lasty = event.widget.winfo_pointerxy()

def move_window(event):
    x_root, y_root = event.widget.winfo_pointerxy()
    deltax, deltay = x_root - window.lastx, y_root - window.lasty

    if deltax != 0 or deltay != 0:  # Update only if there is actual movement
        window.geometry(f"+{window.winfo_x() + deltax}+{window.winfo_y() + deltay}")
        window.lastx, window.lasty = x_root, y_root

def ex_close(win):
    if setting_data["Settings"]["Performernce (ANIME):"] != "True":
        stop_event.set()
        update_thread.join()
    with open("Files/Player Data/Tabs.json",'r') as tab_son:
        tab_son_data=ujson.load(tab_son)

    with open("Files/Player Data/Tabs.json",'w') as fin_tab_son:
        tab_son_data["Shop"]='Close'
        ujson.dump(tab_son_data,fin_tab_son,indent=4)
    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
    win.quit()

with open("Files/Player Data/Status.json", 'r') as fson:
    data=ujson.load(fson)
    lvl=data["status"][0]['level']
    coins=data["status"][0]['coins']

def open_prog(name, cat, rank, desc, value):
    if name!='-' and lvl>=5:
        with open("Files/Temp Files/Shop Temp.csv", 'w', newline='') as csv_open:
            fw=csv.writer(csv_open)
            rec=[name,cat,rank,desc,value]
            fw.writerow(rec)

        subprocess.Popen(['python', 'Anime Version/Shop/gui1.py'])

        ex_close(window)

canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 760,
    width = 555,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    277.0,
    478.0,
    image=image_image_1
)

with open("Files/Mod/presets.json", 'r') as pres_file:
    pres_file_data=ujson.load(pres_file)
    video_path=pres_file_data["Anime"][video]
    preloaded_frames = np.load(video_path)
player = thesystem.system.FastVideoPlayer(canvas, preloaded_frames, 277.0, 478.0, resize_factor=0.7, pause_duration=1.0)

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    285.0,
    411.0,
    image=image_image_2
)

image_image_3 = PhotoImage(
    file=relative_to_assets("image_3.png"))
image_3 = canvas.create_image(
    278.0,
    122.0,
    image=image_image_3
)

if lvl<5:
    canvas.create_text(
        156.0,
        142.0,
        anchor="nw",
        text="[You cannot buy anything at your level]",
        fill="#FF0000",
        font=("Montserrat SemiBold", 12 * -1)
    )

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_1 clicked"),
    relief="flat"
)
button_1.place(
    x=67.0,
    y=165.0,
    width=46.26959228515625,
    height=31.702701568603516
)

button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_2 clicked"),
    relief="flat"
)
button_2.place(
    x=117.0,
    y=165.0,
    width=46.26959228515625,
    height=31.702701568603516
)

image_image_4 = PhotoImage(
    file=relative_to_assets("image_4.png"))
image_4 = canvas.create_image(
    282.0,
    455.0,
    image=image_image_4
)

image_image_5 = PhotoImage(
    file=relative_to_assets("image_5.png"))
image_5 = canvas.create_image(
    281.0,
    247.0,
    image=image_image_5
)

image_image_6 = PhotoImage(
    file=relative_to_assets("image_6.png"))
image_6 = canvas.create_image(
    112.0,
    247.0,
    image=image_image_6
)

canvas.create_text(
    154.0,
    216.0,
    anchor="nw",
    text="E-Rank Type Quest",
    fill="#50ABFF",
    font=("Montserrat Medium", 20 * -1)
)

canvas.create_text(
    154.0,
    242.0,
    anchor="nw",
    text="CATEGORY:",
    fill="#FFFFFF",
    font=("Montserrat Light", 13 * -1)
)

canvas.create_text(
    231.0,
    242.0,
    anchor="nw",
    text="QUEST",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1)
)

canvas.create_text(
    154.0,
    260.0,
    anchor="nw",
    text="RANK:",
    fill="#FFFFFF",
    font=("Montserrat Light", 13 * -1)
)

canvas.create_text(
    197.0,
    260.0,
    anchor="nw",
    text="E",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1)
)

canvas.create_text(
    363.0,
    268.0,
    anchor="nw",
    text="VALUE:",
    fill="#FFFFFF",
    font=("Montserrat Light", 13 * -1)
)

canvas.create_text(
    412.0,
    268.0,
    anchor="nw",
    text="100",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1)
)

button_image_3 = PhotoImage(
    file=relative_to_assets("button_3.png"))
button_3 = Button(
    image=button_image_3,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: open_prog("E-Rank Type Quest", "QUEST", "E", "Quest Given to one by the System", 100),
    relief="flat"
)
button_3.place(
    x=432.0,
    y=224.0,
    width=48.0,
    height=17.0
)

image_image_7 = PhotoImage(
    file=relative_to_assets("image_7.png"))
image_7 = canvas.create_image(
    281.0,
    331.0,
    image=image_image_7
)

image_image_8 = PhotoImage(
    file=relative_to_assets("image_8.png"))
image_8 = canvas.create_image(
    112.0,
    331.0,
    image=image_image_8
)

canvas.create_text(
    154.0,
    300.0,
    anchor="nw",
    text="D-Rank Type Quest",
    fill="#50ABFF",
    font=("Montserrat Medium", 20 * -1)
)

canvas.create_text(
    154.0,
    326.0,
    anchor="nw",
    text="CATEGORY:",
    fill="#FFFFFF",
    font=("Montserrat Light", 13 * -1)
)

canvas.create_text(
    231.0,
    326.0,
    anchor="nw",
    text="QUEST",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1)
)

canvas.create_text(
    154.0,
    344.0,
    anchor="nw",
    text="RANK:",
    fill="#FFFFFF",
    font=("Montserrat Light", 13 * -1)
)

canvas.create_text(
    197.0,
    344.0,
    anchor="nw",
    text="D",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1)
)

canvas.create_text(
    363.0,
    352.0,
    anchor="nw",
    text="VALUE:",
    fill="#FFFFFF",
    font=("Montserrat Light", 13 * -1)
)

canvas.create_text(
    412.0,
    352.0,
    anchor="nw",
    text="300",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1)
)

button_image_4 = PhotoImage(
    file=relative_to_assets("button_4.png"))
button_4 = Button(
    image=button_image_4,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: open_prog("D-Rank Type Quest", "QUEST", "D", "Quest Given to one by the System", 300),
    relief="flat"
)
button_4.place(
    x=432.0,
    y=308.0,
    width=48.0,
    height=17.0
)

image_image_9 = PhotoImage(
    file=relative_to_assets("image_9.png"))
image_9 = canvas.create_image(
    281.0,
    415.0,
    image=image_image_9
)

image_image_10 = PhotoImage(
    file=relative_to_assets("image_10.png"))
image_10 = canvas.create_image(
    112.0,
    415.0,
    image=image_image_10
)

canvas.create_text(
    154.0,
    384.0,
    anchor="nw",
    text="C-Rank Type Quest",
    fill="#50ABFF",
    font=("Montserrat Medium", 20 * -1)
)

canvas.create_text(
    154.0,
    410.0,
    anchor="nw",
    text="CATEGORY:",
    fill="#FFFFFF",
    font=("Montserrat Light", 13 * -1)
)

canvas.create_text(
    231.0,
    410.0,
    anchor="nw",
    text="QUEST",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1)
)

canvas.create_text(
    154.0,
    428.0,
    anchor="nw",
    text="RANK:",
    fill="#FFFFFF",
    font=("Montserrat Light", 13 * -1)
)

canvas.create_text(
    197.0,
    428.0,
    anchor="nw",
    text="C",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1)
)

canvas.create_text(
    363.0,
    436.0,
    anchor="nw",
    text="VALUE:",
    fill="#FFFFFF",
    font=("Montserrat Light", 13 * -1)
)

canvas.create_text(
    412.0,
    436.0,
    anchor="nw",
    text="2700",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1)
)

button_image_5 = PhotoImage(
    file=relative_to_assets("button_5.png"))
button_5 = Button(
    image=button_image_5,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: open_prog("C-Rank Type Quest", "QUEST", "C", "Quest Given to one by the System", 2700),
    relief="flat"
)
button_5.place(
    x=432.0,
    y=392.0,
    width=48.0,
    height=17.0
)

image_image_11 = PhotoImage(
    file=relative_to_assets("image_11.png"))
image_11 = canvas.create_image(
    281.0,
    499.0,
    image=image_image_11
)

image_image_12 = PhotoImage(
    file=relative_to_assets("image_12.png"))
image_12 = canvas.create_image(
    112.0,
    499.0,
    image=image_image_12
)

canvas.create_text(
    154.0,
    468.0,
    anchor="nw",
    text="B-Rank Type Quest",
    fill="#50ABFF",
    font=("Montserrat Medium", 20 * -1)
)

canvas.create_text(
    154.0,
    494.0,
    anchor="nw",
    text="CATEGORY:",
    fill="#FFFFFF",
    font=("Montserrat Light", 13 * -1)
)

canvas.create_text(
    231.0,
    494.0,
    anchor="nw",
    text="QUEST",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1)
)

canvas.create_text(
    154.0,
    512.0,
    anchor="nw",
    text="RANK:",
    fill="#FFFFFF",
    font=("Montserrat Light", 13 * -1)
)

canvas.create_text(
    197.0,
    512.0,
    anchor="nw",
    text="B",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1)
)

canvas.create_text(
    363.0,
    520.0,
    anchor="nw",
    text="VALUE:",
    fill="#FFFFFF",
    font=("Montserrat Light", 13 * -1)
)

canvas.create_text(
    412.0,
    520.0,
    anchor="nw",
    text="75000",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1)
)

button_image_6 = PhotoImage(
    file=relative_to_assets("button_6.png"))
button_6 = Button(
    image=button_image_6,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: open_prog("B-Rank Type Quest", "QUEST", "B", "Quest Given to one by the System", 75000),
    relief="flat"
)
button_6.place(
    x=432.0,
    y=476.0,
    width=48.0,
    height=17.0
)

image_image_13 = PhotoImage(
    file=relative_to_assets("image_13.png"))
image_13 = canvas.create_image(
    282.0,
    583.0,
    image=image_image_13
)

image_image_14 = PhotoImage(
    file=relative_to_assets("image_14.png"))
image_14 = canvas.create_image(
    113.0,
    583.0,
    image=image_image_14
)

canvas.create_text(
    155.0,
    552.0,
    anchor="nw",
    text="A-Rank Type Quest",
    fill="#50ABFF",
    font=("Montserrat Medium", 20 * -1)
)

canvas.create_text(
    155.0,
    578.0,
    anchor="nw",
    text="CATEGORY:",
    fill="#FFFFFF",
    font=("Montserrat Light", 13 * -1)
)

canvas.create_text(
    232.0,
    578.0,
    anchor="nw",
    text="QUEST",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1)
)

canvas.create_text(
    155.0,
    596.0,
    anchor="nw",
    text="RANK:",
    fill="#FFFFFF",
    font=("Montserrat Light", 13 * -1)
)

canvas.create_text(
    198.0,
    596.0,
    anchor="nw",
    text="A",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1)
)

canvas.create_text(
    364.0,
    604.0,
    anchor="nw",
    text="VALUE:",
    fill="#FFFFFF",
    font=("Montserrat Light", 13 * -1)
)

canvas.create_text(
    413.0,
    604.0,
    anchor="nw",
    text="100000",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1)
)

button_image_7 = PhotoImage(
    file=relative_to_assets("button_7.png"))
button_7 = Button(
    image=button_image_7,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: open_prog("A-Rank Type Quest", "QUEST", "A", "Quest Given to one by the System", 100000),
    relief="flat"
)
button_7.place(
    x=433.0,
    y=560.0,
    width=48.0,
    height=17.0
)

image_image_15 = PhotoImage(
    file=relative_to_assets("image_15.png"))
image_15 = canvas.create_image(
    282.0,
    667.0,
    image=image_image_15
)

image_image_16 = PhotoImage(
    file=relative_to_assets("image_16.png"))
image_16 = canvas.create_image(
    113.0,
    667.0,
    image=image_image_16
)

canvas.create_text(
    155.0,
    636.0,
    anchor="nw",
    text="S-Rank Type Quest",
    fill="#50ABFF",
    font=("Montserrat Medium", 20 * -1)
)

canvas.create_text(
    155.0,
    662.0,
    anchor="nw",
    text="CATEGORY:",
    fill="#FFFFFF",
    font=("Montserrat Light", 13 * -1)
)

canvas.create_text(
    232.0,
    662.0,
    anchor="nw",
    text="QUEST",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1)
)

canvas.create_text(
    155.0,
    680.0,
    anchor="nw",
    text="RANK:",
    fill="#FFFFFF",
    font=("Montserrat Light", 13 * -1)
)

canvas.create_text(
    198.0,
    680.0,
    anchor="nw",
    text="S",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1)
)

canvas.create_text(
    364.0,
    688.0,
    anchor="nw",
    text="VALUE:",
    fill="#FFFFFF",
    font=("Montserrat Light", 13 * -1)
)

canvas.create_text(
    413.0,
    688.0,
    anchor="nw",
    text="200000",
    fill="#FFFFFF",
    font=("Montserrat Medium", 13 * -1)
)

button_image_8 = PhotoImage(
    file=relative_to_assets("button_8.png"))
button_8 = Button(
    image=button_image_8,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: open_prog("S-Rank Type Quest", "QUEST", "S", "Quest Given to one by the System", 200000),
    relief="flat"
)
button_8.place(
    x=433.0,
    y=644.0,
    width=48.0,
    height=17.0
)

image_image_17 = PhotoImage(
    file=relative_to_assets("image_17.png"))
image_17 = canvas.create_image(
    417.0,
    180.0,
    image=image_image_17
)

canvas.create_text(
    370.0,
    169.0,
    anchor="nw",
    text=f"{coins}",
    fill="#FFFFFF",
    font=("Montserrat Regular", 20 * -1)
)

side = PhotoImage(file=relative_to_assets("blue.png"))
if job.upper()!="NONE":
    side = PhotoImage(file=relative_to_assets("purple.png"))
canvas.create_image(-10.0, 440.0, image=side)
canvas.create_image(560.0, 476.0, image=side)

canvas.create_rectangle(
    0.0,
    0.0,
    200.0,
    34.0,
    fill="#0C679B",
    outline="")

canvas.create_rectangle(
    0.0,
    730.0,
    640.0,
    825.0,
    fill=transp_clr,
    outline="")

canvas.create_rectangle(
    0.0,
    0.0,
    640.0,
    49.0,
    fill=transp_clr,
    outline="")

image_40 = thesystem.system.side_bar("left_bar.png", (81, 700))
canvas.create_image(0.0, 380.0, image=image_40)

canvas.create_rectangle(
    0.0,
    730.0,
    640.0,
    825.0,
    fill=transp_clr,
    outline="")

image_50 = thesystem.system.side_bar("right_bar.png", (81, 700))
canvas.create_image(540.0, 380.0, image=image_50)

image_index = 0
bot_image_index = 0

top_image = canvas.create_image(
    275.0,
    30.0,
    image=top_preloaded_images[image_index]
)

canvas.tag_bind(top_image, "<ButtonPress-1>", start_move)
canvas.tag_bind(top_image, "<B1-Motion>", move_window)

bottom_image = canvas.create_image(
    275.0,
    730.0,
    image=bottom_preloaded_images[bot_image_index]
)

step,delay=1,1

def update_images():
    global image_index, bot_image_index

    image_index = (image_index + 1) % len(top_preloaded_images)
    top_img = top_preloaded_images[image_index]
    canvas.itemconfig(top_image, image=top_img)
    canvas.top_img = top_img

    bot_image_index = (bot_image_index + 1) % len(bottom_preloaded_images)
    bot_img = bottom_preloaded_images[bot_image_index]
    canvas.itemconfig(bottom_image, image=bot_img)
    canvas.bot_img = bot_img

    window.after(1000 // 24, update_images)

# Start the animation
if setting_data["Settings"]["Performernce (ANIME):"] != "True":
    update_thread = threading.Thread(target=update_images)
    update_thread.start()

button_image_9 = PhotoImage(
    file=relative_to_assets("button_9.png"))
button_9 = Button(
    image=button_image_9,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: ex_close(window),
    relief="flat"
)
button_9.place(
    x=485.0,
    y=109.0,
    width=20.0,
    height=20.0
)
window.resizable(False, False)
window.mainloop()
