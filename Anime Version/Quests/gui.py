
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
import csv
import subprocess
import ujson
import cv2
from PIL import Image, ImageTk
import sys
import os

current_dir = os.path.dirname(os.path.abspath(__file__))

project_root = os.path.abspath(os.path.join(current_dir, '../../'))

sys.path.insert(0, project_root)

import thesystem.system

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")

with open("Files/Tabs.json",'r') as tab_son:
    tab_son_data=ujson.load(tab_son)

with open("Files/Tabs.json",'w') as fin_tab_son:
    tab_son_data["Quest"]='Open'
    ujson.dump(tab_son_data,fin_tab_son,indent=4)

def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()

window.geometry("555x729")

initial_height = 0
target_height = 729
window_width = 555

window.geometry(f"{window_width}x{initial_height}")
thesystem.system.center_window(window,window_width,target_height)
thesystem.system.animate_window_open(window, target_height, window_width, step=30, delay=1)

job=thesystem.misc.return_status()["status"][1]["job"]

top_val='dailyquest.py'
all_prev=''
video='Video'
transp_clr='#0C679B'

if job!='None':
    top_val=''
    all_prev='alt_'
    video='Alt Video'
    transp_clr='#652AA3'

thesystem.system.make_window_transparent(window,transp_clr)

top_images = [f"thesystem/{all_prev}top_bar/{top_val}{str(i).zfill(4)}.png" for i in range(1, 501)]
bottom_images = [f"thesystem/{all_prev}bottom_bar/{str(i).zfill(4)}.png" for i in range(1, 501)]

# Preload top and bottom images
top_preloaded_images = thesystem.system.preload_images(top_images, (580, 38))
bottom_preloaded_images = thesystem.system.preload_images(bottom_images, (580, 33))

subprocess.Popen(['python', 'Files\Mod\default\sfx.py'])


window.configure(bg = "#FFFFFF")
window.attributes('-alpha',0.8)
window.overrideredirect(True)
window.wm_attributes("-topmost", True)

def start_move(event):
    global lastx, lasty
    lastx = event.x_root
    lasty = event.y_root

def move_window(event):
    global lastx, lasty
    deltax = event.x_root - lastx
    deltay = event.y_root - lasty
    x = window.winfo_x() + deltax
    y = window.winfo_y() + deltay
    window.geometry("+%s+%s" % (x, y))
    lastx = event.x_root
    lasty = event.y_root

def ex_close(win):
    with open("Files/Tabs.json",'r') as tab_son:
        tab_son_data=ujson.load(tab_son)

    with open("Files/Tabs.json",'w') as fin_tab_son:
        tab_son_data["Quest"]='Close'
        ujson.dump(tab_son_data,fin_tab_son,indent=4)
    subprocess.Popen(['python', 'Files\Mod\default\sfx_close.py'])
    thesystem.system.animate_window_close(window, target_height, window_width, step=30, delay=1)

def questadd():
    subprocess.Popen(['python', 'Anime Version/Quest adder/gui.py'])
    ex_close(window)

canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 729,
    width = 555,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    277.0,
    404.0,
    image=image_image_1
)

with open("Files\Mod\presets.json", 'r') as pres_file:
    pres_file_data=ujson.load(pres_file)
    video_path=pres_file_data["Anime"][video]
player = thesystem.system.VideoPlayer(canvas, video_path, 277.0, 360.0, resize_factor=0.9)

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    289.0,
    378.0,
    image=image_image_2
)

image_image_3 = PhotoImage(
    file=relative_to_assets("image_3.png"))
image_3 = canvas.create_image(
    288.0,
    109.0,
    image=image_image_3
)

image_image_4 = PhotoImage(
    file=relative_to_assets("image_4.png"))
image_4 = canvas.create_image(
    289.0,
    426.0,
    image=image_image_4
)

with open("Files/Quests/Active_Quests.json", 'r') as fson:
    main_data=ujson.load(fson)
    main_keys=list(main_data.keys())

name1=name2=name3=name4=name5=name6=name7=name8=name9=name10=name11=name12=name13='-'
rank1=rank2=rank3=rank4=rank5=rank6=rank7=rank8=rank9=rank10=rank11=rank12=rank13='-'
type1=type2=type3=type4=type5=type6=type7=type8=type9=type10=type11=type12=type13='-'
id1=id2=id3=id4=id5=id6=id7=id8=id9=id10=id11=id12=id13='-'

c=-1

# ? ==================================================================
try:
    name1=main_keys[c+1]
    rank1=main_data[main_keys[c+1]][0]["rank"]
    type1=main_data[main_keys[c+1]][0]["type"]
    id1=main_data[main_keys[c+1]][0]["ID"]
except:
    name1=rank1=type1=id1='-'

image_image_5=thesystem.system.get_quest_image(rank1,type1)
image_5 = canvas.create_image(
    289.0,
    196.0,
    image=image_image_5
)

canvas.create_text(
    121.0,
    184.0,
    anchor="nw",
    text=name1,
    fill="#FFFFFF",
    font=("Montserrat", 18 * -1)
)

# ? ==================================================================
c+=1
try:
    name2=main_keys[c+1]
    rank2=main_data[main_keys[c+1]][0]["rank"]
    type2=main_data[main_keys[c+1]][0]["type"]
    id2=main_data[main_keys[c+1]][0]["ID"]
except:
    name2=rank2=type2=id2='-'

image_image_6=thesystem.system.get_quest_image(rank2,type2)
image_6 = canvas.create_image(
    289.0,
    235.0,
    image=image_image_6
)

canvas.create_text(
    119.0,
    223.0,
    anchor="nw",
    text=name2,
    fill="#FFFFFF",
    font=("Montserrat", 18 * -1)
)

# ? ==================================================================
c+=1
try:
    name3=main_keys[c+1]
    rank3=main_data[main_keys[c+1]][0]["rank"]
    type3=main_data[main_keys[c+1]][0]["type"]
    id3=main_data[main_keys[c+1]][0]["ID"]
except:
    name3=rank3=type3=id3='-'

image_image_7=thesystem.system.get_quest_image(rank3,type3)
image_7 = canvas.create_image(
    289.0,
    274.0,
    image=image_image_7
)

canvas.create_text(
    119.0,
    262.0,
    anchor="nw",
    text=name3,
    fill="#FFFFFF",
    font=("Montserrat", 18 * -1)
)

# ? ==================================================================
c+=1
try:
    name4=main_keys[c+1]
    rank4=main_data[main_keys[c+1]][0]["rank"]
    type4=main_data[main_keys[c+1]][0]["type"]
    id4=main_data[main_keys[c+1]][0]["ID"]
except:
    name4=rank4=type4=id4='-'

image_image_8=thesystem.system.get_quest_image(rank4,type4)
image_8 = canvas.create_image(
    289.0,
    313.0,
    image=image_image_8
)

canvas.create_text(
    119.0,
    301.0,
    anchor="nw",
    text=name4,
    fill="#FFFFFF",
    font=("Montserrat", 18 * -1)
)

# ? ==================================================================
c+=1
try:
    name5=main_keys[c+1]
    rank5=main_data[main_keys[c+1]][0]["rank"]
    type5=main_data[main_keys[c+1]][0]["type"]
    id5=main_data[main_keys[c+1]][0]["ID"]
except:
    name5=rank5=type5=id5='-'

image_image_9=thesystem.system.get_quest_image(rank5,type5)
image_9 = canvas.create_image(
    289.0,
    352.0,
    image=image_image_9
)

canvas.create_text(
    119.0,
    340.0,
    anchor="nw",
    text=name5,
    fill="#FFFFFF",
    font=("Montserrat", 18 * -1)
)

# ? ==================================================================
c+=1
try:
    name6=main_keys[c+1]
    rank6=main_data[main_keys[c+1]][0]["rank"]
    type6=main_data[main_keys[c+1]][0]["type"]
    id6=main_data[main_keys[c+1]][0]["ID"]
except:
    name6=rank6=type6=id6='-'

image_image_10=thesystem.system.get_quest_image(rank6,type6)
image_10 = canvas.create_image(
    289.0,
    391.0,
    image=image_image_10
)

canvas.create_text(
    119.0,
    379.0,
    anchor="nw",
    text=name6,
    fill="#FFFFFF",
    font=("Montserrat", 18 * -1)
)

# ? ==================================================================
c+=1
try:
    name7=main_keys[c+1]
    rank7=main_data[main_keys[c+1]][0]["rank"]
    type7=main_data[main_keys[c+1]][0]["type"]
    id7=main_data[main_keys[c+1]][0]["ID"]
except:
    name7=rank7=type7=id7='-'

image_image_11=thesystem.system.get_quest_image(rank7,type7)
image_11 = canvas.create_image(
    289.0,
    430.0,
    image=image_image_11
)

canvas.create_text(
    119.0,
    418.0,
    anchor="nw",
    text=name7,
    fill="#FFFFFF",
    font=("Montserrat", 18 * -1)
)

# ? ==================================================================
c+=1
try:
    name8=main_keys[c+1]
    rank8=main_data[main_keys[c+1]][0]["rank"]
    type8=main_data[main_keys[c+1]][0]["type"]
    id8=main_data[main_keys[c+1]][0]["ID"]
except:
    name8=rank8=type8=id8='-'

image_image_12=thesystem.system.get_quest_image(rank8,type8)
image_12 = canvas.create_image(
    289.0,
    469.0,
    image=image_image_12
)

canvas.create_text(
    119.0,
    457.0,
    anchor="nw",
    text=name8,
    fill="#FFFFFF",
    font=("Montserrat", 18 * -1)
)

# ? ==================================================================
c+=1
try:
    name9=main_keys[c+1]
    rank9=main_data[main_keys[c+1]][0]["rank"]
    type9=main_data[main_keys[c+1]][0]["type"]
    id9=main_data[main_keys[c+1]][0]["ID"]
except:
    name9=rank9=type9=id9='-'

image_image_13=thesystem.system.get_quest_image(rank9,type9)
image_13 = canvas.create_image(
    289.0,
    508.0,
    image=image_image_13
)

canvas.create_text(
    119.0,
    496.0,
    anchor="nw",
    text=name9,
    fill="#FFFFFF",
    font=("Montserrat", 18 * -1)
)

# ? ==================================================================
c+=1
try:
    name10=main_keys[c+1]
    rank10=main_data[main_keys[c+1]][0]["rank"]
    type10=main_data[main_keys[c+1]][0]["type"]
    id10=main_data[main_keys[c+1]][0]["ID"]
except:
    name10=rank10=type10=id10='-'

image_image_14=thesystem.system.get_quest_image(rank10,type10)
image_14 = canvas.create_image(
    289.0,
    547.0,
    image=image_image_14
)

canvas.create_text(
    119.0,
    535.0,
    anchor="nw",
    text=name10,
    fill="#FFFFFF",
    font=("Montserrat", 18 * -1)
)

# ? ==================================================================
c+=1
try:
    name11=main_keys[c+1]
    rank11=main_data[main_keys[c+1]][0]["rank"]
    type11=main_data[main_keys[c+1]][0]["type"]
    id11=main_data[main_keys[c+1]][0]["ID"]
except:
    name11=rank11=type11=id11='-'

image_image_15=thesystem.system.get_quest_image(rank11,type11)
image_15 = canvas.create_image(
    289.0,
    586.0,
    image=image_image_15
)

canvas.create_text(
    119.0,
    574.0,
    anchor="nw",
    text=name11,
    fill="#FFFFFF",
    font=("Montserrat", 18 * -1)
)

# ? ==================================================================
c+=1
try:
    name12=main_keys[c+1]
    rank12=main_data[main_keys[c+1]][0]["rank"]
    type12=main_data[main_keys[c+1]][0]["type"]
    id12=main_data[main_keys[c+1]][0]["ID"]
except:
    name12=rank12=type12=id12='-'

image_image_16=thesystem.system.get_quest_image(rank12,type12)
image_16 = canvas.create_image(
    289.0,
    625.0,
    image=image_image_16
)

canvas.create_text(
    119.0,
    613.0,
    anchor="nw",
    text=name12,
    fill="#FFFFFF",
    font=("Montserrat", 18 * -1)
)

# ? ==================================================================
c+=1
try:
    name13=main_keys[c+1]
    rank13=main_data[main_keys[c+1]][0]["rank"]
    type13=main_data[main_keys[c+1]][0]["type"]
    id13=main_data[main_keys[c+1]][0]["ID"]
except:
    name13=rank13=type13=id13='-'

image_image_17=thesystem.system.get_quest_image(rank13,type13)
image_17 = canvas.create_image(
    289.0,
    664.0,
    image=image_image_17
)

canvas.create_text(
    119.0,
    652.0,
    anchor="nw",
    text=name13,
    fill="#FFFFFF",
    font=("Montserrat", 18 * -1)
)

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: thesystem.system.open_write_quest(name1, id1, type1, window),
    relief="flat"
)
button_1.place(
    x=465.0,
    y=184.0,
    width=24.0,
    height=24.0
)

button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: thesystem.system.open_write_quest(name2, id2, type2, window),
    relief="flat"
)
button_2.place(
    x=465.0,
    y=223.0,
    width=24.0,
    height=24.0
)

button_image_3 = PhotoImage(
    file=relative_to_assets("button_3.png"))
button_3 = Button(
    image=button_image_3,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: thesystem.system.open_write_quest(name3, id3, type3, window),
    relief="flat"
)
button_3.place(
    x=465.0,
    y=262.0,
    width=24.0,
    height=24.0
)

button_image_4 = PhotoImage(
    file=relative_to_assets("button_4.png"))
button_4 = Button(
    image=button_image_4,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: thesystem.system.open_write_quest(name4, id4, type4, window),
    relief="flat"
)
button_4.place(
    x=465.0,
    y=301.0,
    width=24.0,
    height=24.0
)

button_image_5 = PhotoImage(
    file=relative_to_assets("button_5.png"))
button_5 = Button(
    image=button_image_5,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: thesystem.system.open_write_quest(name5, id5, type5, window),
    relief="flat"
)
button_5.place(
    x=465.0,
    y=340.0,
    width=24.0,
    height=24.0
)

button_image_6 = PhotoImage(
    file=relative_to_assets("button_6.png"))
button_6 = Button(
    image=button_image_6,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: thesystem.system.open_write_quest(name6, id6, type6, window),
    relief="flat"
)
button_6.place(
    x=465.0,
    y=379.0,
    width=24.0,
    height=24.0
)

button_image_7 = PhotoImage(
    file=relative_to_assets("button_7.png"))
button_7 = Button(
    image=button_image_7,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: thesystem.system.open_write_quest(name7, id7, type7, window),
    relief="flat"
)
button_7.place(
    x=465.0,
    y=418.0,
    width=24.0,
    height=24.0
)

button_image_8 = PhotoImage(
    file=relative_to_assets("button_8.png"))
button_8 = Button(
    image=button_image_8,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: thesystem.system.open_write_quest(name8, id8, type8, window),
    relief="flat"
)
button_8.place(
    x=465.0,
    y=457.0,
    width=24.0,
    height=24.0
)

button_image_9 = PhotoImage(
    file=relative_to_assets("button_9.png"))
button_9 = Button(
    image=button_image_9,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: thesystem.system.open_write_quest(name9, id9, type9, window),
    relief="flat"
)
button_9.place(
    x=465.0,
    y=496.0,
    width=24.0,
    height=24.0
)

button_image_10 = PhotoImage(
    file=relative_to_assets("button_10.png"))
button_10 = Button(
    image=button_image_10,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: thesystem.system.open_write_quest(name10, id10, type10, window),
    relief="flat"
)
button_10.place(
    x=465.0,
    y=535.0,
    width=24.0,
    height=24.0
)

button_image_11 = PhotoImage(
    file=relative_to_assets("button_11.png"))
button_11 = Button(
    image=button_image_11,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: thesystem.system.open_write_quest(name11, id11, type11, window),
    relief="flat"
)
button_11.place(
    x=465.0,
    y=574.0,
    width=24.0,
    height=24.0
)

button_image_12 = PhotoImage(
    file=relative_to_assets("button_12.png"))
button_12 = Button(
    image=button_image_12,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: thesystem.system.open_write_quest(name12, id12, type12, window),
    relief="flat"
)
button_12.place(
    x=465.0,
    y=613.0,
    width=24.0,
    height=24.0
)

button_image_13 = PhotoImage(
    file=relative_to_assets("button_13.png"))
button_13 = Button(
    image=button_image_13,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: thesystem.system.open_write_quest(name13, id13, type13, window),
    relief="flat"
)
button_13.place(
    x=465.0,
    y=652.0,
    width=24.0,
    height=24.0
)

button_image_14 = PhotoImage(
    file=relative_to_assets("button_14.png"))
button_14 = Button(
    image=button_image_14,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: questadd(),
    relief="flat"
)
button_14.place(
    x=472.0,
    y=129.0,
    width=30.0,
    height=30.0
)

'''
image_0=canvas.create_rectangle(
    0.0,
    0.0,
    570.0,
    35.0,
    fill="#212121",
    outline="")

canvas.tag_bind(image_0, "<ButtonPress-1>", start_move)
canvas.tag_bind(image_0, "<B1-Motion>", move_window)

button_image_0 = PhotoImage(
    file=relative_to_assets("button_0.png"))
button_0 = Button(
    image=button_image_0,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: ex_close(window),
    relief="flat"
)
button_0.place(
    x=520.0,
    y=3.0,
    width=28.0,
    height=28.0
)
'''

side = PhotoImage(file=relative_to_assets("blue.png"))
if job.upper()!="NONE":
    side = PhotoImage(file=relative_to_assets("purple.png"))
canvas.create_image(24.0, 363.0, image=side)
canvas.create_image(542.0, 367.0, image=side)

canvas.create_rectangle(
    0.0,
    0.0,
    200.0,
    34.0,
    fill=transp_clr,
    outline="")

canvas.create_rectangle(
    0.0,
    710.0,
    640.0,
    825.0,
    fill=transp_clr,
    outline="")

canvas.create_rectangle(
    0.0,
    0.0,
    640.0,
    49.0,
    fill=transp_clr,
    outline="")

image_40 = thesystem.system.side_bar("left_bar.png", (92, 680))
canvas.create_image(24.0, 375.0, image=image_40)

canvas.create_rectangle(
    0.0,
    950.0,
    640.0,
    825.0,
    fill="#0C679B",
    outline="")

image_50 = thesystem.system.side_bar("right_bar.png", (81, 680))
canvas.create_image(535.0, 367.0, image=image_50)

image_index = 0
bot_image_index = 0

top_image = canvas.create_image(
    283.0,
    32.0,
    image=top_preloaded_images[image_index]
)

canvas.tag_bind(top_image, "<ButtonPress-1>", start_move)
canvas.tag_bind(top_image, "<B1-Motion>", move_window)

bottom_image = canvas.create_image(
    280.0,
    710.0,
    image=bottom_preloaded_images[bot_image_index]
)

step,delay=1,1

def update_images():
    global image_index, bot_image_index

    # Update top image
    image_index = (image_index + 1) % len(top_preloaded_images)
    canvas.itemconfig(top_image, image=top_preloaded_images[image_index])

    # Update bottom image
    bot_image_index = (bot_image_index + 1) % len(bottom_preloaded_images)
    canvas.itemconfig(bottom_image, image=bottom_preloaded_images[bot_image_index])

    # Schedule next update (24 FPS)
    window.after(1000 // 24, update_images)

# Start the animation
update_images()

# =================================================================================================

button_image_15 = PhotoImage(
    file=relative_to_assets("button_15.png"))
button_15 = Button(
    image=button_image_15,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: ex_close(window),
    relief="flat"
)
button_15.place(
    x=475.76104736328125,
    y=57.534942626953125,
    width=23.207855224609375,
    height=20.921785354614258
)

window.resizable(False, False)
window.mainloop()
