
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
import csv
import ujson
import subprocess

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()

window.geometry("475x163")
window.configure(bg = "#2D2D2D")
window.attributes('-alpha',0.9)
window.overrideredirect(True)
window.wm_attributes("-topmost", True)

desc1=desc2=''
segments = []
segment_length = 77

def ex_close(win):
    win.quit()

with open("Files/Temp Files/Shop Sell Temp.csv", 'r') as csv_open:
    fr=csv.reader(csv_open)
    for k in fr:
        name=k[0]

with open("Files/Inventory.json", 'r') as file_check_op:
    inv_main_data=ujson.load(file_check_op)
    inv_main_data_keys=list(inv_main_data.keys())
    
    qty = inv_main_data[name][0]["qty"]
    rank = inv_main_data[name][0]["rank"]
    cat = inv_main_data[name][0]["cat"]
    val = inv_main_data[name][0]["Value"]
    desc = inv_main_data[name][0]["desc"]

    for i in range(0, len(desc), segment_length):
        segments.append(desc[i:i+segment_length])
    if len(segments) >= 1:
        desc1 = segments[0]
    if len(segments) >= 2:
        desc2 = segments[1]

def selling():
    with open("Files/status.json", 'r') as read_status_file:
        read_status_file_data=ujson.load(read_status_file)

    with open("Files/Inventory.json", 'r') as fin_inv_fson:
        fin_inv_data=ujson.load(fin_inv_fson)

        fin_inv_data[k][0]["qty"]-=1
        closing=False
        if fin_inv_data[k][0]["qty"]==0:
            del fin_inv_data[k]
            closing=True

    with open("Files/Inventory.json", 'w') as finaladdon_inv:
        ujson.dump(fin_inv_data, finaladdon_inv, indent=6)

    with open("Files/status.json", 'w') as write_status_file:
        read_status_file_data["status"][0]['coins']+=int(val)
        ujson.dump(read_status_file_data, write_status_file, indent=4)

    if closing==True:
        subprocess.Popen(['python', 'Anime Version/Shop/gui.py'])

        window.quit()

canvas = Canvas(
    window,
    bg = "#2D2D2D",
    height = 163,
    width = 475,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    81.0,
    87.0,
    image=image_image_1
)

canvas.create_rectangle(
    121.0,
    50.0,
    139.0,
    68.0,
    fill="#585858",
    outline="")

canvas.create_text(
    147.0,
    32.0,
    anchor="nw",
    text="Would you like to Purchase",
    fill="#FFFFFF",
    font=("Montserrat Regular", 15 * -1)
)

canvas.create_text(
    147.0,
    49.0,
    anchor="nw",
    text=f"[{name}]",
    fill="#FFFFFF",
    font=("Montserrat ItalicBold", 16 * -1)
)

canvas.create_text(
    147.0,
    70.0,
    anchor="nw",
    text=f"{rank}-Rank",
    fill="#FFFFFF",
    font=("Montserrat ItalicMedium", 12 * -1)
)

canvas.create_text(
    410.0,
    110.0,
    anchor="nw",
    text="For 1 QTY",
    fill="#FFFFFF",
    font=("Montserrat ItalicMedium", 12 * -1)
)

canvas.create_text(
    147.0,
    85.0,
    anchor="nw",
    text=desc1,
    fill="#FFFFFF",
    font=("Montserrat Regular", 10 * -1)
)

canvas.create_text(
    147.0,
    97.0,
    anchor="nw",
    text=desc2,
    fill="#FFFFFF",
    font=("Montserrat Regular", 10 * -1)
)

canvas.create_text(
    124.0,
    50.0,
    anchor="nw",
    text="1",
    fill="#FFFFFF",
    font=("Montserrat Bold", 15 * -1)
)

canvas.create_text(
    305.0,
    110.0,
    anchor="nw",
    text="Value:",
    fill="#FFFFFF",
    font=("MontserratItalic Bold", 12 * -1)
)

canvas.create_rectangle(
    345.0,
    112.0,
    409.0,
    124.0,
    fill="#1B1B1B",
    outline="")

canvas.create_text(
    346.0,
    112.0,
    anchor="nw",
    text=val,
    fill="#FFFFFF",
    font=("Montserrat Regular", 10 * -1)
)

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: selling,
    relief="flat"
)
button_1.place(
    x=367.0,
    y=134.0,
    width=95.0,
    height=16.0
)

button_image_0 = PhotoImage(
    file=relative_to_assets("button_0.png"))
button_0 = Button(
    image=button_image_0,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: ex_close(window),
    relief="flat"
)
button_0.place(
    x=440.0,
    y=3.0,
    width=28.0,
    height=28.0
)

window.resizable(False, False)
window.mainloop()
