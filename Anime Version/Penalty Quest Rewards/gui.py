
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
import subprocess
import ujson
import cv2
from PIL import Image, ImageTk
import sys
import os
import numpy as np

current_dir = os.path.dirname(os.path.abspath(__file__))

project_root = os.path.abspath(os.path.join(current_dir, '../../'))

sys.path.insert(0, project_root)

import thesystem.system

with open("Files/Mod/presets.json", 'r') as pres_file:
    pres_file_data=ujson.load(pres_file)
    get_stuff_path_str=pres_file_data["Anime"]["Long Mid Size"]

def get_stuff_path(key):
    full_path=get_stuff_path_str+'/'+key
    return full_path

def start_move(event):
    window.lastx, window.lasty = event.widget.winfo_pointerxy()

def move_window(event):
    x_root, y_root = event.widget.winfo_pointerxy()
    deltax, deltay = x_root - window.lastx, y_root - window.lasty

    if deltax != 0 or deltay != 0:  # Update only if there is actual movement
        window.geometry(f"+{window.winfo_x() + deltax}+{window.winfo_y() + deltay}")
        window.lastx, window.lasty = x_root, y_root


def ex_close(win):
    win.quit()

window = Tk()

subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])

initial_height = 0
target_height = 669
window_width = 555

window.geometry(f"{window_width}x{initial_height}")
thesystem.system.make_window_transparent(window)
thesystem.system.animate_window_open(window, target_height, window_width, step=10, delay=1)

window.configure(bg = "#FFFFFF")
set_data=thesystem.misc.return_settings()
transp_value=set_data["Settings"]["Transparency"]

window.attributes('-alpha',transp_value)
window.overrideredirect(True)
window.wm_attributes("-topmost", True)

canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 669,
    width = 555,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
image_image_1 = PhotoImage(
    file=get_stuff_path("image_1.png"))
image_1 = canvas.create_image(
    277.0,
    478.0,
    image=image_image_1
)

with open("Files/Mod/presets.json", 'r') as pres_file:
    pres_file_data=ujson.load(pres_file)
    video_path=pres_file_data["Anime"]["Video"]
    preloaded_frames=np.load(video_path)
player = thesystem.system.FastVideoPlayer(canvas, preloaded_frames, 300.0, 190.0)

image_image_2 = PhotoImage(
    file=get_stuff_path("image_2.png"))
image_2 = canvas.create_image(
    287.0,
    364.0,
    image=image_image_2
)

image_image_3 = PhotoImage(
    file=get_stuff_path("image_3.png"))
image_3 = canvas.create_image(
    286.0,
    175.0,
    image=image_image_3
)

canvas.create_text(
    210.0,
    232.0,
    anchor="nw",
    text="Reward Previews",
    fill="#FFFFFF",
    font=("Montserrat Regular", 18 * -1)
)

canvas.create_rectangle(
    105.0,
    291.0,
    468.0,
    317.0,
    fill="#272727",
    outline="")

canvas.create_text(
    105.0,
    293.0,
    anchor="nw",
    text=f" 1. No Rewards!",
    fill="#FFFFFF",
    font=("Montserrat Regular", 18 * -1)
)

image_0=canvas.create_rectangle(
    0.0,
    0.0,
    570.0,
    35.0,
    fill="#212121",
    outline="")

canvas.tag_bind(image_0, "<ButtonPress-1>", start_move)
canvas.tag_bind(image_0, "<B1-Motion>", move_window)

button_image_8 = PhotoImage(
    file=get_stuff_path("button_0.png"))
button_8 = Button(
    image=button_image_8,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: ex_close(window),
    relief="flat"
)
button_8.place(
    x=520.0,
    y=3.0,
    width=28.0,
    height=28.0
)

window.resizable(False, False)
window.mainloop()
