
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer
# Fork by Venexs


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
import ujson
import csv
import subprocess
import threading
import cv2
from PIL import Image, ImageTk
import sys
import os
import numpy as np
import webbrowser

current_dir = os.path.dirname(os.path.abspath(__file__))

project_root = os.path.abspath(os.path.join(current_dir, '../../'))

sys.path.insert(0, project_root)

import thesystem.system

subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")

def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()

initial_height = 0
target_height = 524
window_width = 789

window.geometry(f"{window_width}x{initial_height}")
thesystem.system.make_window_transparent(window)
thesystem.system.animate_window_open(window, target_height, window_width, step=30, delay=1)

window.configure(bg = "#FFFFFF")
set_data=thesystem.misc.return_settings()
transp_value=set_data["Settings"]["Transparency"]

window.attributes('-alpha',transp_value)
window.overrideredirect(True)
window.wm_attributes("-topmost", True)


def start_move(event):
    window.lastx, window.lasty = event.widget.winfo_pointerxy()

def move_window(event):
    x_root, y_root = event.widget.winfo_pointerxy()
    deltax, deltay = x_root - window.lastx, y_root - window.lasty

    if deltax != 0 or deltay != 0:  # Update only if there is actual movement
        window.geometry(f"+{window.winfo_x() + deltax}+{window.winfo_y() + deltay}")
        window.lastx, window.lasty = x_root, y_root

def ex_close(win):
    with open("Files/Player Data/Tabs.json",'r') as tab_son:
        tab_son_data=ujson.load(tab_son)

    with open("Files/Player Data/Tabs.json",'w') as fin_tab_son:
        tab_son_data["Credits"]='Close'
        ujson.dump(tab_son_data,fin_tab_son,indent=4)
    threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
    thesystem.system.animate_window_close(window, initial_height, window_width, step=50, delay=1)

def attri_show():
    canvas.itemconfig("Credit", state="hidden")
    canvas.itemconfig("Attribution", state="normal")

def credit_show():
    canvas.itemconfig("Attribution", state="hidden")
    canvas.itemconfig("Credit", state="normal")

canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 524,
    width = 789,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    534.0,
    468.0,
    image=image_image_1
)

with open("Files/Mod/presets.json", 'r') as pres_file:
    pres_file_data=ujson.load(pres_file)
    video_path=pres_file_data["Manwha"]["Video"]
    preloaded_frames=np.load(video_path)
player = thesystem.system.FastVideoPlayer(canvas, preloaded_frames, 478.0, 277.0, resize_factor=1.3)

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    394.0,
    261.0,
    image=image_image_2
)

image_image_3 = PhotoImage(
    file=relative_to_assets("image_3.png"))
image_3 = canvas.create_image(
    111.0,
    44.0,
    image=image_image_3,
    tag="Credit"
)

image_image_4 = PhotoImage(
    file=relative_to_assets("image_4.png"))
image_4 = canvas.create_image(
    139.0,
    100.0,
    image=image_image_4,
    tag="Credit"
)

image_image_5 = PhotoImage(
    file=relative_to_assets("image_5.png"))
image_5 = canvas.create_image(
    223.0,
    185.0,
    image=image_image_5,
    tag="Credit"
)
button_image_1 = PhotoImage(file=relative_to_assets("button_1.png"))
button_1 = canvas.create_image(357.0, 131.0, image=button_image_1, anchor="nw",
    tag="Credit",)
canvas.tag_bind(button_1, "<ButtonPress-1>", lambda e: webbrowser.open("https://linktr.ee/Venexs"))

button_image_2 = PhotoImage(file=relative_to_assets("button_2.png"))
button_2 = canvas.create_image(357.0, 150.0, image=button_image_2, anchor="nw",
    tag="Credit",)
canvas.tag_bind(button_2, "<ButtonPress-1>", lambda e: webbrowser.open("https://www.youtube.com/channel/UCsPAixZxeSYKlcSCoQ8RoYQ"))

button_image_3 = PhotoImage(file=relative_to_assets("button_3.png"))
button_3 = canvas.create_image(357.0, 193.0, image=button_image_3, anchor="nw",
    tag="Credit",)
canvas.tag_bind(button_3, "<ButtonPress-1>", lambda e: webbrowser.open("https://bio.link/hanakai"))

image_image_6 = PhotoImage(
    file=relative_to_assets("image_6.png"))
image_6 = canvas.create_image(
    119.0,
    273.0,
    image=image_image_6,
    tag="Credit"
)

image_image_7 = PhotoImage(
    file=relative_to_assets("image_7.png"))
image_7 = canvas.create_image(
    226.0,
    310.0,
    image=image_image_7,
    tag="Credit"
)

image_image_8 = PhotoImage(
    file=relative_to_assets("image_8.png"))
image_8 = canvas.create_image(
    119.0,
    346.0,
    image=image_image_8,
    tag="Credit"
)

image_image_9 = PhotoImage(
    file=relative_to_assets("image_9.png"))
image_9 = canvas.create_image(
    226.0,
    390.0,
    image=image_image_9,
    tag="Credit"
)

image_image_10 = PhotoImage(
    file=relative_to_assets("image_10.png"))
image_10 = canvas.create_image(
    119.0,
    428.0,
    image=image_image_10,
    tag="Credit"
)

image_image_11 = PhotoImage(
    file=relative_to_assets("image_11.png"))
image_11 = canvas.create_image(
    226.0,
    461.0,
    image=image_image_11,
    tag="Credit"
)

image_image_12 = PhotoImage(
    file=relative_to_assets("image_12.png"))
image_12 = canvas.create_image(
    467.0,
    47.0,
    image=image_image_12,
    tag="Credit"
)

image_image_13 = PhotoImage(
    file=relative_to_assets("image_13.png"))
image_13 = canvas.create_image(
    574.0,
    80.0,
    image=image_image_13,
    tag="Credit"
)

image_image_14 = PhotoImage(
    file=relative_to_assets("image_14.png"))
image_14 = canvas.create_image(
    466.0,
    109.0,
    image=image_image_14,
    tag="Credit"
)

image_image_15 = PhotoImage(
    file=relative_to_assets("image_15.png"))
image_15 = canvas.create_image(
    574.0,
    305.0,
    image=image_image_15,
    tag="Credit"
)

image_image_16 = PhotoImage(
    file=relative_to_assets("image_16.png"))
image_16 = canvas.create_image(
    130.0,
    41.0,
    image=image_image_16,
    tag="Attribution",
    state="hidden"
)

image_image_17 = PhotoImage(
    file=relative_to_assets("image_17.png"))
image_17 = canvas.create_image(
    394.0,
    317.0,
    image=image_image_17,
    tag="Attribution",
    state="hidden"
)

button_image_5 = PhotoImage(file=relative_to_assets("button_5.png"))
button_5 = canvas.create_image(69.0, 484.0, image=button_image_5, anchor="nw",tag="Attribution" ,state="hidden")
canvas.tag_bind(button_5, "<Button-1>", lambda e: credit_show())

button_image_6 = PhotoImage(file=relative_to_assets("button_6.png"))
button_6 = canvas.create_image(70.0, 484.0, image=button_image_6, anchor="nw", tag="Credit")
canvas.tag_bind(button_6, "<Button-1>", lambda e: attri_show())


image_image_18 = PhotoImage(
    file=relative_to_assets("image_18.png"))
image_18= canvas.create_image(
    395.0,
    10.0,
    image=image_image_18
)

canvas.tag_bind(image_18, "<ButtonPress-1>", start_move)
canvas.tag_bind(image_18, "<B1-Motion>", move_window)

button_image_7= PhotoImage(
    file=relative_to_assets("button_7.png"))
button_7 = Button(
    image=button_image_7,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: ex_close(window),
    relief="flat"
)
button_7.place(
    x=745.0,
    y=16.0,
    width=30.0,
    height=30.0
)
window.resizable(False, False)
window.mainloop()
