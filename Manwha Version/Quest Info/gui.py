
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
import ujson
import csv
import subprocess
import cv2
from PIL import Image, ImageTk
import sys
import os
import numpy as np

current_dir = os.path.dirname(os.path.abspath(__file__))

project_root = os.path.abspath(os.path.join(current_dir, '../../'))

sys.path.insert(0, project_root)

import thesystem.system
import thesystem.quests

subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])

window = Tk()

initial_height = 0
target_height = 362
window_width = 469

window.geometry(f"{window_width}x{initial_height}")
thesystem.system.make_window_transparent(window)
thesystem.system.center_window(window,window_width,target_height)
thesystem.system.animate_window_open(window, target_height, window_width, step=30, delay=1)

window.configure(bg = "#0c679b")
set_data=thesystem.misc.return_settings()
transp_value=set_data["Settings"]["Transparency"]

window.attributes('-alpha',transp_value)
window.overrideredirect(True)
window.wm_attributes("-topmost", True)

def start_move(event):
    window.lastx, window.lasty = event.widget.winfo_pointerxy()

def move_window(event):
    x_root, y_root = event.widget.winfo_pointerxy()
    deltax, deltay = x_root - window.lastx, y_root - window.lasty

    if deltax != 0 or deltay != 0:  # Update only if there is actual movement
        window.geometry(f"+{window.winfo_x() + deltax}+{window.winfo_y() + deltay}")
        window.lastx, window.lasty = x_root, y_root


def ex_close(win):
    win.quit()

with open("Files/Temp Files/Quest Temp.csv", 'r') as csv_open:
    fr=csv.reader(csv_open)
    for k in fr:
        name=k[0]
        id=int(k[1])
        typeof=k[2]

with open("Files/Mod/presets.json", 'r') as pres_file:
    pres_file_data=ujson.load(pres_file)
    get_stuff_path_str=pres_file_data["Manwha"]["Mid Size Screen"]

def get_stuff_path(key):
    full_path=get_stuff_path_str+'/'+key
    return full_path

def get_quest_img(rank):
    with open('Files/Player Data/Theme_Check.json', 'r') as themefile:
        theme_data=ujson.load(themefile)
        theme=theme_data["Theme"]
    if rank == '?':
        path = f"Files\\Mod\\default\\{theme}\\Quest img\\Unknown.png"
    else:
        path = f"Files\\Mod\\default\\{theme}\\Quest img\\{rank}.png"
    image = Image.open(path)
    image = image.resize((105, 105), Image.Resampling.LANCZOS)
    return ImageTk.PhotoImage(image)

if typeof == "Learn":
        
    two_title=False
    name_seg=[]
    name_seg_len=24
    name_t_1=name_t_2=''
    if len(name)>23:
        for i in range(0, len(name), name_seg_len):
            name_seg.append(name[i:i+name_seg_len])

        if len(name_seg) >= 1:
            name_t_1 = name_seg[0]
        if len(name_seg) >= 2:
            name_t_2 = name_seg[1]

        two_title=True


    objdesc1=objdesc2=objdesc3=objdesc4=objdesc5=''
    desc1=desc2=desc3=desc4=''
    segments = []
    other_seg=[]
    segment_length = 52

    with open("Files/Player Data/Active_Quests.json", 'r') as fson:
        data=ujson.load(fson)
        for k in data:
            if k==name:
                obj=objval='-'
                rank=data[k][0]["rank"]

                check=True
                try:
                    skill=data[k][0]["skill"]
                    level=data[k][0]["level"]
                except:
                    check=False
                    obj_desc=data[k][0]["obj_desc"]
                    for i in range(0, len(obj_desc), segment_length):
                        other_seg.append(obj_desc[i:i+segment_length])

                    if len(other_seg) >= 1:
                        objdesc1 = other_seg[0]
                    if len(other_seg) >= 2:
                        objdesc2 = "-"+other_seg[1]
                    if len(other_seg) >= 3:
                        objdesc3 = "-"+other_seg[2]
                    if len(other_seg) >= 4:
                        objdesc4 = "-"+other_seg[3]
                    if len(other_seg) >= 5:
                        objdesc5 = "-"+other_seg[4]

                try:
                    obj=data[k][0]["amt"]
                    objval=data[k][0]["amtval"]
                except:
                    obj=data[k][0]["time"]
                    objval=data[k][0]["timeval"]

                desc_full=data[k][0]["desc"]
                fatigue=thesystem.system.give_fatigue_from_rank(rank)

                for i in range(0, len(desc_full), segment_length):
                    segments.append(desc_full[i:i+segment_length])

                if len(segments) >= 1:
                    desc1 = segments[0]
                if len(segments) >= 2:
                    desc2 = "-"+segments[1]
                if len(segments) >= 3:
                    desc3 = "-"+segments[2]
                if len(segments) >= 4:
                    desc4 = "-"+segments[3]

                rewards=data[k][0]["Rewards"]

    with open("Files/Player Data/Status.json", 'r') as data_fson:
        data_status=ujson.load(data_fson)
        finaL_fatigue=data_status["status"][0]["fatigue_max"]
        pl_fatigue=data_status["status"][0]["fatigue"]

        fatigue_true=False  
        if (pl_fatigue+fatigue)>=finaL_fatigue:
            fatigue_true=True

    if fatigue_true==True:
        thesystem.system.message_open("High Rank")


    canvas = Canvas(
        window,
        bg = "#FFFFFF",
        height = 362,
        width = 469,
        bd = 0,
        highlightthickness = 0,
        relief = "ridge"
    )

    canvas.place(x = 0, y = 0)
    image_image_1 = PhotoImage(
        file=get_stuff_path("image_1.png"))
    image_1 = canvas.create_image(
        545.0,
        525.0,
        image=image_image_1
    )

    with open("Files/Mod/presets.json", 'r') as pres_file:
        pres_file_data=ujson.load(pres_file)
        video_path=pres_file_data["Manwha"]["Video"]
    preloaded_frames=np.load(video_path)
    player = thesystem.system.FastVideoPlayer(canvas, preloaded_frames, 200.0, 180.0)

    image_image_2 = PhotoImage(
        file=get_stuff_path("frame.png"))
    image_2 = canvas.create_image(
        233.0,
        180.0,
        image=image_image_2
    )

    image_image_3 = PhotoImage(
        file=get_stuff_path("quests_title.png"))
    image_3 = canvas.create_image(
        73.0,
        43.0,
        image=image_image_3
    )

    image_image_4 = get_quest_img(rank)
    image_4 = canvas.create_image(
        92.0,
        135.0,
        image=image_image_4
    )

    if two_title==True:

        canvas.create_text(
            158.0,
            83.0-20,
            anchor="nw",
            text=f"[{name_t_1}",
            fill="#FFD337",
            font=("Exo Bold", 24 * -1)
        )

        canvas.create_text(
            158.0,
            83.0,
            anchor="nw",
            text=f"{name_t_2}]",
            fill="#FFD337",
            font=("Exo Bold", 24 * -1)
        )

    else:
        canvas.create_text(
            158.0,
            83.0,
            anchor="nw",
            text=f"[{name}]",
            fill="#FFD337",
            font=("Exo Bold", 24 * -1)
        )

    if check==True:
        canvas.create_text(
            162.0,
            156.0,
            anchor="nw",
            text=f"Learn [{skill}] and become [{level}] at it.",
            fill="#FFD337",
            font=("Exo Regular", 11 * -1)
        )

    else:
        canvas.create_text(
            162.0,
            156.0,
            anchor="nw",
            text=objdesc1,
            fill="#FFD337",
            font=("Exo Regular", 11 * -1)
        )

        canvas.create_text(
            162.0,
            156.0+13,
            anchor="nw",
            text=objdesc2,
            fill="#FFD337",
            font=("Exo Regular", 11 * -1)
        )

        canvas.create_text(
            162.0,
            156.0+(13*2),
            anchor="nw",
            text=objdesc3,
            fill="#FFD337",
            font=("Exo Regular", 11 * -1)
        )

        canvas.create_text(
            162.0,
            156.0+(13*3),
            anchor="nw",
            text=objdesc4,
            fill="#FFD337",
            font=("Exo Regular", 11 * -1)
        )

        canvas.create_text(
            162.0,
            156.0+(13*4),
            anchor="nw",
            text=objdesc5,
            fill="#FFD337",
            font=("Exo Regular", 11 * -1)
        )

    canvas.create_text(
        222.0,
        135.0,
        anchor="nw",
        text=f"Do for {obj} {objval}",
        fill="#FFD337",
        font=("Exo Bold", 11 * -1)
    )

    canvas.create_text(
        162.0,
        118.0,
        anchor="nw",
        text="Quest Difficulty:",
        fill="#FFD337",
        font=("Exo Regular", 12 * -1)
    )

    canvas.create_text(
        162.0,
        134.0,
        anchor="nw",
        text="Objective:",
        fill="#FFD337",
        font=("Exo Regular", 12 * -1)
    )

    canvas.create_text(
        254.0,
        118.0,
        anchor="nw",
        text=f"{rank}-Rank",
        fill="#FFD337",
        font=("Exo Bold", 12 * -1)
    )

    canvas.create_text(
        92.0,
        214.0+10,
        anchor="nw",
        text=desc1,
        fill="#FFD337",
        font=("Exo Regular", 9 * -1)
    )

    canvas.create_text(
        92.0,
        226.0+10,
        anchor="nw",
        text=desc2,
        fill="#FFD337",
        font=("Exo Regular", 9 * -1)
    )

    canvas.create_text(
        92.0,
        226.0+12+10,
        anchor="nw",
        text=desc3,
        fill="#FFD337",
        font=("Exo Regular", 9 * -1)
    )

    canvas.create_text(
        92.0,
        226.0+24+10,
        anchor="nw",
        text=desc4,
        fill="#FFD337",
        font=("Exo Regular", 9 * -1)
    )

    # ? ===============================================================================

    name1=name2=name3=name4='-'
    qt1=qt2=qt3=qt4=0
    dicts={}

    try:
        c=0
        reward_key=list(rewards.keys())
        for k in reward_key:
            if c==0:
                if k=="LVLADD":
                    name1="Level Increase"
                    o_name1=k
                    qt1=data[name][0]["Rewards"]["LVLADD"]
                    c+=1
                elif k=="STRav":
                    name1="Addition of STR, AGI, VIT, Available Points"
                    o_name1=k
                    qt1=data[name][0]["Rewards"]["STRav"]
                    c+=1
                elif k=="INTav":
                    name1="Addition of INT, PER, MAN, Available Points"
                    o_name1=k
                    qt1=data[name][0]["Rewards"]["INTav"]
                    c+=1
                else:
                    name1=k
                    o_name1=k
                    qt1=data[name][0]["Rewards"][k]
                    c+=1
                
                dicts[o_name1]=qt1

            elif c==1:
                if k=="LVLADD":
                    name2="Level Increase"
                    o_name2=k
                    qt2=rewards=data[name][0]["Rewards"]["LVLADD"]
                    c+=1
                elif k=="STRav":
                    name2="Addition of STR, AGI, VIT, Available Points"
                    o_name2=k
                    qt2=rewards=data[name][0]["Rewards"]["STRav"]
                    c+=1
                elif k=="INTav":
                    name2="Addition of INT, PER, MAN, Available Points"
                    o_name2=k
                    qt2=rewards=data[name][0]["Rewards"]["INTav"]
                    c+=1
                else:
                    name2=k
                    o_name2=k
                    qt2=data[name][0]["Rewards"][k]
                    c+=1

                dicts[o_name2]=qt2

            elif c==2:
                if k=="LVLADD":
                    name3="Level Increase"
                    o_name3=k
                    qt3=rewards=data[name][0]["Rewards"]["LVLADD"]
                    c+=1
                elif k=="STRav":
                    name3="Addition of STR, AGI, VIT, Available Points"
                    o_name3=k
                    qt3=rewards=data[name][0]["Rewards"]["STRav"]
                    c+=1
                elif k=="INTav":
                    name3="Addition of INT, PER, MAN, Available Points"
                    o_name3=k
                    qt3=rewards=data[name][0]["Rewards"]["INTav"]
                    c+=1
                else:
                    name3=k
                    o_name3=k
                    qt3=data[name][0]["Rewards"][k]
                    c+=1

                dicts[o_name3]=qt3

            elif c==3:
                if k=="LVLADD":
                    name4="Level Increase"
                    o_name4=k
                    qt4=rewards=data[name][0]["Rewards"]["LVLADD"]
                    c+=1
                elif k=="STRav":
                    name4="Addition of STR, AGI, VIT, Available Points"
                    o_name4=k
                    qt4=rewards=data[name][0]["Rewards"]["STRav"]
                    c+=1
                elif k=="INTav":
                    name4="Addition of INT, PER, MAN, Available Points"
                    o_name4=k
                    qt4=rewards=data[name][0]["Rewards"]["INTav"]
                    c+=1
                else:
                    name4=k
                    o_name4=k
                    qt4=data[name][0]["Rewards"][k]
                    c+=1

                dicts[o_name4]=qt4

    except:
        print()

    canvas.create_text(
        25.0,
        246.0,
        anchor="nw",
        text="REWARDS:",
        fill="#FFD337",
        font=("Exo SemiBold", 14 * -1)
    )

    canvas.create_text(
        38.0,
        263.0,
        anchor="nw",
        text=f"-{name1}",
        fill="#FFD337",
        font=("Exo Light", 12 * -1)
    )

    canvas.create_text(
        38.0,
        279.0,
        anchor="nw",
        text=f"-{name2}",
        fill="#FFD337",
        font=("Exo Light", 12 * -1)
    )

    canvas.create_text(
        38.0,
        295.0,
        anchor="nw",
        text=f"-{name3}",
        fill="#FFD337",
        font=("Exo Light", 12 * -1)
    )

    canvas.create_text(
        38.0,
        311.0,
        anchor="nw",
        text=f"-{name4}",
        fill="#FFD337",
        font=("Exo Light", 12 * -1)
    )

    button_image_1 = PhotoImage(
        file=get_stuff_path("return.png"))
    button_1 = Button(
        image=button_image_1,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: thesystem.system.return_back_to_tab("Quests",window),
        relief="flat"
    )
    button_1.place(
        x=416.0,
        y=26.0,
        width=30.0,
        height=30.0
    )

    button_image_2 = PhotoImage(
        file=get_stuff_path("gift.png"))
    button_2 = Button(
        image=button_image_2,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: thesystem.system.set_preview_temp(o_name1,qt1),
        relief="flat"
    )
    button_2.place(
        x=25.0,
        y=265.0,
        width=13.0,
        height=13.0
    )

    button_image_3 = PhotoImage(
        file=get_stuff_path("gift.png"))
    button_3 = Button(
        image=button_image_3,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: thesystem.system.set_preview_temp(o_name2,qt2),
        relief="flat"
    )
    button_3.place(
        x=25.0,
        y=281.0,
        width=13.0,
        height=13.0
    )

    button_image_4 = PhotoImage(
        file=get_stuff_path("gift.png"))
    button_4 = Button(
        image=button_image_4,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: thesystem.system.set_preview_temp(o_name3,qt3),
        relief="flat"
    )
    button_4.place(
        x=25.0,
        y=296.0,
        width=13.0,
        height=13.0
    )

    button_image_5 = PhotoImage(
        file=get_stuff_path("gift.png"))
    button_5 = Button(
        image=button_image_5,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: thesystem.system.set_preview_temp(o_name4,qt4),
        relief="flat"
    )
    button_5.place(
        x=25.0,
        y=312.0,
        width=13.0,
        height=12.999969482421875
    )

    image_image_5 = PhotoImage(
        file=get_stuff_path("preview.png"))
    image_5 = canvas.create_image(
        83.0,
        337.0,
        image=image_image_5
    )

    button_image_6 = PhotoImage(
        file=get_stuff_path("abandon.png"))
    button_6 = Button(
        image=button_image_6,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: thesystem.quests.abandon_quest(name,window),
        relief="flat"
    )
    button_6.place(
        x=202.0,
        y=330.0,
        width=120.0,
        height=16.0
    )


    if fatigue_true == False:
        button_image_7 = PhotoImage(
            file=get_stuff_path("complete.png"))
        button_7 = Button(
            image=button_image_7,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: thesystem.quests.quest_reward(window,dicts,rank,name),
            relief="flat"
        )
        button_7.place(
            x=329.0,
            y=330.0,
            width=120.0,
            height=16.0
        )

    image_image_6 = PhotoImage(
        file=get_stuff_path("mover.png"))
    image_6 = canvas.create_image(
        234.0,
        10.0,
        image=image_image_6
    )

    canvas.tag_bind(image_6, "<ButtonPress-1>", start_move)
    canvas.tag_bind(image_6, "<B1-Motion>", move_window)

    window.resizable(False, False)
    window.mainloop()

elif typeof == "Common":     
    two_title=False
    name_seg=[]
    name_seg_len=24
    name_t_1=name_t_2=''
    if len(name)>23:
        for i in range(0, len(name), name_seg_len):
            name_seg.append(name[i:i+name_seg_len])

        if len(name_seg) >= 1:
            name_t_1 = name_seg[0]
        if len(name_seg) >= 2:
            name_t_2 = name_seg[1]

        two_title=True

    desc1=desc2=''
    segments = []
    segment_length = 77

    with open("Files/Player Data/Active_Quests.json", 'r') as fson:
        data=ujson.load(fson)
        for k in data:
            if k==name:
                rank=data[k][0]["rank"]

                skill=data[k][0]["skill"]
                num=data[k][0]["amt"]
                numval=data[k][0]["amtval"]

                try:
                    time=data[k][0]["time"]
                    timeval=data[k][0]["timval"]
                except:
                    time=timeval='-'

                desc_full=data[k][0]["desc"]
                fatigue=thesystem.system.give_fatigue_from_rank(rank)

                for i in range(0, len(desc_full), segment_length):
                    segments.append(desc_full[i:i+segment_length])

                if len(segments) >= 1:
                    desc1 = segments[0]
                if len(segments) >= 2:
                    desc2 = segments[1]

                rewards=data[k][0]["Rewards"]

    with open("Files/Player Data/Status.json", 'r') as data_fson:
        data_status=ujson.load(data_fson)
        finaL_fatigue=data_status["status"][0]["fatigue_max"]
        pl_fatigue=data_status["status"][0]["fatigue"]

        fatigue_true=False
        if (pl_fatigue+fatigue)>=finaL_fatigue:
            fatigue_true=True

    if fatigue_true==True:
        thesystem.system.message_open("High Rank")

    def up():
        global ex_txt
        ex_tr_txt=canvas.itemcget(ex_txt, "text")
        new_1=int(ex_tr_txt)+1
        be_new_1=f"{new_1}"
        subprocess.Popen(['python', 'Files/Mod/default/sfx_point.py'])
        canvas.itemconfig(ex_txt, text=be_new_1)

        if int(new_1)==int(num):
            thesystem.quests.quest_reward(window,dicts,rank,name)

    canvas = Canvas(
        window,
        bg = "#FFFFFF",
        height = 362,
        width = 469,
        bd = 0,
        highlightthickness = 0,
        relief = "ridge"
    )

    canvas.place(x = 0, y = 0)
    image_image_1 = PhotoImage(
        file=get_stuff_path("image_1.png"))
    image_1 = canvas.create_image(
        545.0,
        525.0,
        image=image_image_1
    )

    with open("Files/Mod/presets.json", 'r') as pres_file:
        pres_file_data=ujson.load(pres_file)
        video_path=pres_file_data["Manwha"]["Video"]
    preloaded_frames=np.load(video_path)
    player = thesystem.system.FastVideoPlayer(canvas, preloaded_frames, 200.0, 180.0)

    image_image_2 = PhotoImage(
        file=get_stuff_path("frame.png"))
    image_2 = canvas.create_image(
        233.0,
        180.0,
        image=image_image_2
    )

    image_image_3 = PhotoImage(
        file=get_stuff_path("quests_title.png"))
    image_3 = canvas.create_image(
        73.0,
        43.0,
        image=image_image_3
    )

    image_image_4 = get_quest_img(rank)
    image_4 = canvas.create_image(
        92.0,
        130.0,
        image=image_image_4
    )

    if two_title==True:
        canvas.create_text(
            158.0,
            78.0-26,
            anchor="nw",
            text=f"[{name_t_1}",
            fill="#FFD337",
            font=("Exo Bold", 24 * -1)
        )

        canvas.create_text(
            160.0,
            78.0,
            anchor="nw",
            text=f"{name_t_2}]",
            fill="#FFD337",
            font=("Exo Bold", 24 * -1)
        )

    else:
        canvas.create_text(
            158.0,
            78.0,
            anchor="nw",
            text=f"[{name}]",
            fill="#FFD337",
            font=("Exo Bold", 24 * -1)
        )

    canvas.create_text(
        222.0,
        130.0,
        anchor="nw",
        text=f"{num} {numval}",
        fill="#FFD337",
        font=("Exo Bold", 11 * -1)
    )

    canvas.create_text(
        162.0,
        113.0,
        anchor="nw",
        text="Quest Difficulty:",
        fill="#FFD337",
        font=("Exo Regular", 12 * -1)
    )

    canvas.create_text(
        162.0,
        129.0,
        anchor="nw",
        text="Objective:",
        fill="#FFD337",
        font=("Exo Regular", 12 * -1)
    )

    canvas.create_text(
        254.0,
        113.0,
        anchor="nw",
        text=f"{rank}-Rank",
        fill="#FFD337",
        font=("Exo Bold", 12 * -1)
    )

    canvas.create_text(
        92.0,
        220.0,
        anchor="nw",
        text=desc1,
        fill="#FFD337",
        font=("Exo Regular", 10 * -1)
    )

    canvas.create_text(
        92.0,
        232.0,
        anchor="nw",
        text=desc2,
        fill="#FFD337",
        font=("Exo Regular", 10 * -1)
    )

    # ? ===============================================================================

    name1=name2=name3=name4='-'
    o_name1=o_name2=o_name3=o_name4='-'
    qt1=qt2=qt3=qt4=0
    dicts={}

    try:
        c=0
        reward_key=list(rewards.keys())
        for k in reward_key:
            if c==0:
                if k=="LVLADD":
                    name1="Level Increase"
                    o_name1=k
                    qt1=data[name][0]["Rewards"]["LVLADD"]
                    c+=1
                elif k=="STRav":
                    name1="Addition of STR, AGI, VIT, Available Points"
                    o_name1=k
                    qt1=data[name][0]["Rewards"]["STRav"]
                    c+=1
                elif k=="INTav":
                    name1="Addition of INT, PER, MAN, Available Points"
                    o_name1=k
                    qt1=data[name][0]["Rewards"]["INTav"]
                    c+=1
                else:
                    name1=k
                    o_name1=k
                    qt1=data[name][0]["Rewards"][k]
                    c+=1
                
                dicts[o_name1]=qt1

            elif c==1:
                if k=="LVLADD":
                    name2="Level Increase"
                    o_name2=k
                    qt2=rewards=data[name][0]["Rewards"]["LVLADD"]
                    c+=1
                elif k=="STRav":
                    name2="Addition of STR, AGI, VIT, Available Points"
                    o_name2=k
                    qt2=rewards=data[name][0]["Rewards"]["STRav"]
                    c+=1
                elif k=="INTav":
                    name2="Addition of INT, PER, MAN, Available Points"
                    o_name2=k
                    qt2=rewards=data[name][0]["Rewards"]["INTav"]
                    c+=1
                else:
                    name2=k
                    o_name2=k
                    qt2=data[name][0]["Rewards"][k]
                    c+=1

                dicts[o_name2]=qt2

            elif c==2:
                if k=="LVLADD":
                    name3="Level Increase"
                    o_name3=k
                    qt3=rewards=data[name][0]["Rewards"]["LVLADD"]
                    c+=1
                elif k=="STRav":
                    name3="Addition of STR, AGI, VIT, Available Points"
                    o_name3=k
                    qt3=rewards=data[name][0]["Rewards"]["STRav"]
                    c+=1
                elif k=="INTav":
                    name3="Addition of INT, PER, MAN, Available Points"
                    o_name3=k
                    qt3=rewards=data[name][0]["Rewards"]["INTav"]
                    c+=1
                else:
                    name3=k
                    o_name3=k
                    qt3=data[name][0]["Rewards"][k]
                    c+=1

                dicts[o_name3]=qt3

            elif c==3:
                if k=="LVLADD":
                    name4="Level Increase"
                    o_name4=k
                    qt4=rewards=data[name][0]["Rewards"]["LVLADD"]
                    c+=1
                elif k=="STRav":
                    name4="Addition of STR, AGI, VIT, Available Points"
                    o_name4=k
                    qt4=rewards=data[name][0]["Rewards"]["STRav"]
                    c+=1
                elif k=="INTav":
                    name4="Addition of INT, PER, MAN, Available Points"
                    o_name4=k
                    qt4=rewards=data[name][0]["Rewards"]["INTav"]
                    c+=1
                else:
                    name4=k
                    o_name4=k
                    qt4=data[name][0]["Rewards"][k]
                    c+=1

                dicts[o_name4]=qt4

    except:
        print()

    canvas.create_text(
        25.0,
        246.0,
        anchor="nw",
        text="REWARDS:",
        fill="#FFD337",
        font=("Exo SemiBold", 14 * -1)
    )

    canvas.create_text(
        38.0,
        263.0,
        anchor="nw",
        text=f"-{name1}",
        fill="#FFD337",
        font=("Exo Light", 12 * -1)
    )

    canvas.create_text(
        38.0,
        279.0,
        anchor="nw",
        text=f"-{name2}",
        fill="#FFD337",
        font=("Exo Light", 12 * -1)
    )

    canvas.create_text(
        38.0,
        295.0,
        anchor="nw",
        text=f"-{name3}",
        fill="#FFD337",
        font=("Exo Light", 12 * -1)
    )

    canvas.create_text(
        38.0,
        311.0,
        anchor="nw",
        text=f"-{name4}",
        fill="#FFD337",
        font=("Exo Light", 12 * -1)
    )

    button_image_1 = PhotoImage(
        file=get_stuff_path("return.png"))
    button_1 = Button(
        image=button_image_1,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: thesystem.system.return_back_to_tab("Quests", window),
        relief="flat"
    )
    button_1.place(
        x=416.0,
        y=26.0,
        width=30.0,
        height=30.0
    )

    button_image_2 = PhotoImage(
        file=get_stuff_path("gift.png"))
    button_2 = Button(
        image=button_image_2,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: thesystem.system.set_preview_temp(o_name1,qt1),
        relief="flat"
    )
    button_2.place(
        x=25.0,
        y=265.0,
        width=13.0,
        height=13.0
    )

    button_image_3 = PhotoImage(
        file=get_stuff_path("gift.png"))
    button_3 = Button(
        image=button_image_3,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: thesystem.system.set_preview_temp(o_name2,qt2),
        relief="flat"
    )
    button_3.place(
        x=25.0,
        y=281.0,
        width=13.0,
        height=13.0
    )

    button_image_4 = PhotoImage(
        file=get_stuff_path("gift.png"))
    button_4 = Button(
        image=button_image_4,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: thesystem.system.set_preview_temp(o_name3,qt3),
        relief="flat"
    )
    button_4.place(
        x=25.0,
        y=296.0,
        width=13.0,
        height=13.0
    )

    button_image_5 = PhotoImage(
        file=get_stuff_path("gift.png"))
    button_5 = Button(
        image=button_image_5,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: thesystem.system.set_preview_temp(o_name4,qt4),
        relief="flat"
    )
    button_5.place(
        x=25.0,
        y=312.0,
        width=13.0,
        height=12.999969482421875
    )

    image_image_5 = PhotoImage(
        file=get_stuff_path("preview.png"))
    image_5 = canvas.create_image(
        83.0,
        337.0,
        image=image_image_5
    )

    button_image_6 = PhotoImage(
        file=get_stuff_path("abandon.png"))
    button_6 = Button(
        image=button_image_6,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: thesystem.quests.abandon_quest(name,window),
        relief="flat"
    )
    button_6.place(
        x=337.0,
        y=330.0,
        width=120.0,
        height=16.0
    )

    image_image_6 = PhotoImage(
        file=get_stuff_path("mover.png"))
    image_6 = canvas.create_image(
        234.0,
        10.0,
        image=image_image_6
    )

    canvas.tag_bind(image_6, "<ButtonPress-1>", start_move)
    canvas.tag_bind(image_6, "<B1-Motion>", move_window)

    minu=30

    canvas.create_text(
        162.0,
        181.0-minu,
        anchor="nw",
        text=f"{skill}:",
        fill="#FFD337",
        font=("Exo SemiBold", 12 * -1)
    )

    ex_txt=canvas.create_text(
        162.0,
        198.0-minu,
        anchor="nw",
        text=0,
        fill="#FFD337",
        font=("Exo Regular", 14 * -1)
    )

    canvas.create_text(
        215.0,
        199.0-minu,
        anchor="nw",
        text=f"{numval}",
        fill="#FFD337",
        font=("Exo SemiBold", 13 * -1)
    )
    if time!='-' and timeval!='-':
        canvas.create_text(
            356.9481201171875,
            194.0-minu,
            anchor="nw",
            text="Do One for ",
            fill="#FFD337",
            font=("Exo Regular", 12 * -1)
        )

        canvas.create_text(
            356.9481201171875,
            207.0-minu,
            anchor="nw",
            text=f"{time} {timeval}",
            fill="#FFD337",
            font=("Exo Regular", 12 * -1)
        )

    if fatigue_true == False:
        button_image_7 = PhotoImage(
            file=get_stuff_path("add.png"))
        button_7 = Button(
            image=button_image_7,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: up(),
            relief="flat"
        )
        button_7.place(
            x=335.0,
            y=199.0-minu,
            width=17.53521156311035,
            height=16.351930618286133
        )
    window.resizable(False, False)
    window.mainloop()

elif typeof == "Unknown":
    desc1=desc2=''
    segments = []
    segment_length = 77

    with open("Files/Player Data/Active_Quests.json", 'r') as fson:
        data=ujson.load(fson)
        for k in data:
            if k==name:
                if data[k][0]["ID"]==id:
                    rank=data[k][0]["rank"]

                    obj=data[k][0]["obj"]

                    desc_full=data[k][0]["desc"]

                    for i in range(0, len(desc_full), segment_length):
                        segments.append(desc_full[i:i+segment_length])

                    if len(segments) >= 1:
                        desc1 = segments[0]
                    if len(segments) >= 2:
                        desc2 = segments[1]

                    rewards=data[k][0]["Rewards"]

    with open("Files/Player Data/Status.json", "r") as f:
        data2=ujson.load(f)
        level=data2["status"][0]["level"]

    canvas = Canvas(
        window,
        bg = "#FFFFFF",
        height = 362,
        width = 469,
        bd = 0,
        highlightthickness = 0,
        relief = "ridge"
    )

    canvas.place(x = 0, y = 0)
    image_image_1 = PhotoImage(
        file=get_stuff_path("image_1.png"))
    image_1 = canvas.create_image(
        545.0,
        525.0,
        image=image_image_1
    )

    with open("Files/Mod/presets.json", 'r') as pres_file:
        pres_file_data=ujson.load(pres_file)
        video_path=pres_file_data["Manwha"]["Video"]
    preloaded_frames=np.load(video_path)
    player = thesystem.system.FastVideoPlayer(canvas, preloaded_frames, 200.0, 180.0)

    image_image_2 = PhotoImage(
        file=get_stuff_path("frame.png"))
    image_2 = canvas.create_image(
        233.0,
        180.0,
        image=image_image_2
    )

    image_image_3 = PhotoImage(
        file=get_stuff_path("quests_title.png"))
    image_3 = canvas.create_image(
        73.0,
        63.0,
        image=image_image_3
    )

    image_image_4 = get_quest_img(rank)
    image_4 = canvas.create_image(
        92.0,
        155.0,
        image=image_image_4
    )

    canvas.create_text(
        152.0,
        115.0,
        anchor="nw",
        text=f"[{name}]",
        fill="#FFD337",
        font=("Exo Bold", 24 * -1)
    )

    canvas.create_text(
        216.0,
        167.0,
        anchor="nw",
        text="BECOME A PLAYER",
        fill="#FFD337",
        font=("Exo Bold", 11 * -1)
    )

    canvas.create_text(
        156.0,
        150.0,
        anchor="nw",
        text="Quest Difficulty:",
        fill="#FFD337",
        font=("Exo Regular", 12 * -1)
    )

    canvas.create_text(
        156.0,
        166.0,
        anchor="nw",
        text="Objective:",
        fill="#FFD337",
        font=("Exo Regular", 12 * -1)
    )

    canvas.create_text(
        248.0,
        150.0,
        anchor="nw",
        text="X-Rank",
        fill="#FFD337",
        font=("Exo Bold", 12 * -1)
    )

    # ? ===============================================================================

    name1=name2=name3=name4='-'
    qt1=qt2=qt3=qt4=0
    dicts={}

    try:
        c=0
        reward_key=list(rewards.keys())
        for k in reward_key:
            if c==0:
                if k=="LVLADD":
                    name1="Level Increase"
                    o_name1=k
                    qt1=data[name][0]["Rewards"]["LVLADD"]
                    c+=1
                elif k=="STRav":
                    name1="Addition of STR, AGI, VIT, Available Points"
                    o_name1=k
                    qt1=data[name][0]["Rewards"]["STRav"]
                    c+=1
                elif k=="INTav":
                    name1="Addition of INT, PER, MAN, Available Points"
                    o_name1=k
                    qt1=data[name][0]["Rewards"]["INTav"]
                    c+=1
                else:
                    name1=k
                    o_name1=k
                    qt1=data[name][0]["Rewards"][k]
                
                dicts[o_name1]=qt1

            elif c==1:
                if k=="LVLADD":
                    name2="Level Increase"
                    o_name2=k
                    qt2=rewards=data[name][0]["Rewards"]["LVLADD"]
                    c+=1
                elif k=="STRav":
                    name2="Addition of STR, AGI, VIT, Available Points"
                    o_name2=k
                    qt2=rewards=data[name][0]["Rewards"]["STRav"]
                    c+=1
                elif k=="INTav":
                    name2="Addition of INT, PER, MAN, Available Points"
                    o_name2=k
                    qt2=rewards=data[name][0]["Rewards"]["INTav"]
                    c+=1
                else:
                    name2=k
                    o_name2=k
                    qt2=data[name][0]["Rewards"][k]

                dicts[o_name2]=qt2

            elif c==2:
                if k=="LVLADD":
                    name3="Level Increase"
                    o_name3=k
                    qt3=rewards=data[name][0]["Rewards"]["LVLADD"]
                    c+=1
                elif k=="STRav":
                    name3="Addition of STR, AGI, VIT, Available Points"
                    o_name3=k
                    qt3=rewards=data[name][0]["Rewards"]["STRav"]
                    c+=1
                elif k=="INTav":
                    name3="Addition of INT, PER, MAN, Available Points"
                    o_name3=k
                    qt3=rewards=data[name][0]["Rewards"]["INTav"]
                    c+=1
                else:
                    name3=k
                    o_name3=k
                    qt3=data[name][0]["Rewards"][k]

                dicts[o_name3]=qt3

            elif c==3:
                if k=="LVLADD":
                    name4="Level Increase"
                    o_name4=k
                    qt4=rewards=data[name][0]["Rewards"]["LVLADD"]
                    c+=1
                elif k=="STRav":
                    name4="Addition of STR, AGI, VIT, Available Points"
                    o_name4=k
                    qt4=rewards=data[name][0]["Rewards"]["STRav"]
                    c+=1
                elif k=="INTav":
                    name4="Addition of INT, PER, MAN, Available Points"
                    o_name4=k
                    qt4=rewards=data[name][0]["Rewards"]["INTav"]
                    c+=1
                else:
                    name4=k
                    o_name4=k
                    qt4=data[name][0]["Rewards"][k]

                dicts[o_name4]=qt4

    except:
        print()

    canvas.create_text(
        25.0,
        246.0,
        anchor="nw",
        text="REWARDS:",
        fill="#FFD337",
        font=("Exo SemiBold", 14 * -1)
    )

    canvas.create_text(
        38.0,
        263.0,
        anchor="nw",
        text=f"-{name1}",
        fill="#FFD337",
        font=("Exo Light", 12 * -1)
    )

    canvas.create_text(
        38.0,
        279.0,
        anchor="nw",
        text=f"-{name2}",
        fill="#FFD337",
        font=("Exo Light", 12 * -1)
    )

    canvas.create_text(
        38.0,
        295.0,
        anchor="nw",
        text=f"-{name3}",
        fill="#FFD337",
        font=("Exo Light", 12 * -1)
    )

    canvas.create_text(
        38.0,
        311.0,
        anchor="nw",
        text=f"-{name4}",
        fill="#FFD337",
        font=("Exo Light", 12 * -1)
    )

    button_image_1 = PhotoImage(
        file=get_stuff_path("return.png"))
    button_1 = Button(
        image=button_image_1,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: thesystem.system.return_back_to_tab("Quests",window),
        relief="flat"
    )
    button_1.place(
        x=416.0,
        y=26.0,
        width=30.0,
        height=30.0
    )

    if level>=100:
        button_image_7 = PhotoImage(
            file=get_stuff_path("complete.png"))
        button_7 = Button(
            image=button_image_7,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: thesystem.quests.quest_reward(window,dicts,rank,name,special=True),
            relief="flat"
        )
        button_7.place(
            x=329.0,
            y=330.0,
            width=120.0,
            height=16.0
        )

    button_image_2 = PhotoImage(
        file=get_stuff_path("gift.png"))
    button_2 = Button(
        image=button_image_2,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: thesystem.system.set_preview_temp(o_name1,qt1),
        relief="flat"
    )
    button_2.place(
        x=25.0,
        y=265.0,
        width=13.0,
        height=13.0
    )

    button_image_3 = PhotoImage(
        file=get_stuff_path("gift.png"))
    button_3 = Button(
        image=button_image_3,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: thesystem.system.set_preview_temp(o_name2,qt2),
        relief="flat"
    )
    button_3.place(
        x=25.0,
        y=281.0,
        width=13.0,
        height=13.0
    )

    button_image_4 = PhotoImage(
        file=get_stuff_path("gift.png"))
    button_4 = Button(
        image=button_image_4,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: thesystem.system.set_preview_temp(o_name3,qt3),
        relief="flat"
    )
    button_4.place(
        x=25.0,
        y=296.0,
        width=13.0,
        height=13.0
    )

    button_image_5 = PhotoImage(
        file=get_stuff_path("gift.png"))
    button_5 = Button(
        image=button_image_5,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: thesystem.system.set_preview_temp(o_name4,qt4),
        relief="flat"
    )
    button_5.place(
        x=25.0,
        y=312.0,
        width=13.0,
        height=12.999969482421875
    )

    image_image_5 = PhotoImage(
        file=get_stuff_path("preview.png"))
    image_5 = canvas.create_image(
        83.0,
        337.0,
        image=image_image_5
    )

    image_image_6 = PhotoImage(
        file=get_stuff_path("mover.png"))
    image_6 = canvas.create_image(
        234.0,
        10.0,
        image=image_image_6
    )

    canvas.tag_bind(image_6, "<ButtonPress-1>", start_move)
    canvas.tag_bind(image_6, "<B1-Motion>", move_window)

    window.resizable(False, False)
    window.mainloop()
