
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
import subprocess
import random
import json
import cv2
from PIL import Image, ImageTk
import time
import sys
import os

current_dir = os.path.dirname(os.path.abspath(__file__))

project_root = os.path.abspath(os.path.join(current_dir, '../../'))

sys.path.insert(0, project_root)

import thesystem.system

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

window = Tk()

window.after(2000)

initial_height = 0
target_height = 449
window_width = 696

thesystem.system.make_window_transparent(window)
subprocess.Popen(['python', 'Files\Mod\default\sfx.py'])
window.geometry(f"{window_width}x{initial_height}")
thesystem.system.animate_window_open(window, target_height, window_width, step=20, delay=1)

thesystem.system.center_window(window,window_width,target_height)
window.configure(bg = "#FFFFFF")
window.attributes('-alpha',0.8)
window.overrideredirect(True)
window.wm_attributes("-topmost", True)

def start_move(event):
    global lastx, lasty
    lastx = event.x_root
    lasty = event.y_root

def move_window(event):
    global lastx, lasty
    deltax = event.x_root - lastx
    deltay = event.y_root - lasty
    x = window.winfo_x() + deltax
    y = window.winfo_y() + deltay
    window.geometry("+%s+%s" % (x, y))
    lastx = event.x_root
    lasty = event.y_root

def ex_close(eve):
    subprocess.Popen(['python', 'Files\Mod\default\sfx_close.py'])
    thesystem.system.animate_window_close(window, initial_height, window_width, step=30, delay=1)

def prog():
    canvas.itemconfig("First", state="normal")
    window.after(3000, hide_first)

def hide_first():
    canvas.itemconfig("First", state="hidden")
    canvas.itemconfig("Second", state="normal")
    window.after(3000, show_third)

def show_third():
    canvas.itemconfig("Second", state="hidden")
    canvas.itemconfig("Third", state="normal")
    window.after(30000, end_prog)

def end_prog():
    canvas.itemconfig("Third", state="hidden")
    window.quit()  # Uncomment this line if you want to close the window after 20 seconds

def fin(a):
    subprocess.Popen(['python', 'First/Congrats/gui.py'])
    window.quit()

def no(a):
    window.quit()

canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 449,
    width = 696,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    609.0,
    301.0,
    image=image_image_1
)

with open("Files\Mod\presets.json", 'r') as pres_file:
    pres_file_data=json.load(pres_file)
    video_path=pres_file_data["Anime"]["Video"]
player = thesystem.system.VideoPlayer(canvas, video_path, 478.0, 313.0)

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    348.0,
    233.0,
    image=image_image_2
)

image_image_3 = PhotoImage(
    file=relative_to_assets("image_3.png"))
image_3 = canvas.create_image(
    379.0,
    110.0,
    image=image_image_3
)

image_image_4 = PhotoImage(
    file=relative_to_assets("image_4.png"))
image_4 = canvas.create_image(
    186.0,
    110.0,
    image=image_image_4
)

image_image_5 = PhotoImage(
    file=relative_to_assets("image_5.png"))
image_5 = canvas.create_image(
    347.0,
    276.0,
    image=image_image_5,
    tags="First",
    state="hidden"  
)

image_image_6 = PhotoImage(
    file=relative_to_assets("image_6.png"))
image_6 = canvas.create_image(
    363.0,
    206.0,
    image=image_image_6,
    tags="Second",
    state="hidden"
)

image_image_7 = PhotoImage(
    file=relative_to_assets("image_7.png"))
image_7 = canvas.create_image(
    349.0,
    202.0,
    image=image_image_7,
    tags="Third",
    state="hidden"
)

image_image_8 = PhotoImage(
    file=relative_to_assets("image_8.png"))
image_8 = canvas.create_image(
    236.0,
    300.0,
    image=image_image_8,
    tags="Third",
    state="hidden"
)

canvas.tag_bind(image_8, "<ButtonPress-1>", fin)

image_image_9 = PhotoImage(
    file=relative_to_assets("image_9.png"))
image_9 = canvas.create_image(
    439.0,
    300.0,
    image=image_image_9,
    tags="Third",
    state="hidden"
)

canvas.tag_bind(image_9, "<ButtonPress-1>", no)

canvas.create_rectangle(
    0.0,
    0.0,
    696.0,
    29.0,
    fill="#0C679B",
    outline="")

canvas.create_rectangle(
    0.0,
    6.0,
    190.0,
    42.0,
    fill="#0C679B",
    outline="")

canvas.create_rectangle(
    0.0,
    414.0,
    696.0,
    449.0,
    fill="#0C679B",
    outline="")

image_image_80 = PhotoImage(
    file=relative_to_assets("side1.png"))
image_80 = canvas.create_image(
    43.0,
    222.13719177246094,
    image=image_image_80
)

image_image_90 = PhotoImage(
    file=relative_to_assets("side2.png"))
image_90 = canvas.create_image(
    652.0,
    230.52886962890625,
    image=image_image_90
)

canvas.create_rectangle(
    178.0,
    6.0,
    696.0,
    52.0,
    fill="#0C679B",
    outline="")

image_image_100 = PhotoImage(
    file=relative_to_assets("bar1.png"))
image_100 = canvas.create_image(
    345.0,
    35.0,
    image=image_image_100
)

canvas.tag_bind(image_100, "<ButtonPress-1>", start_move)
canvas.tag_bind(image_100, "<B1-Motion>", move_window)

image_image_110 = PhotoImage(
    file=relative_to_assets("bar2.png"))
image_110 = canvas.create_image(
    347.0,
    415.0,
    image=image_image_110
)

button_image_20 = PhotoImage(
    file=relative_to_assets("close.png"))
button_20 = Button(
    image=button_image_20,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: ex_close(window),
    relief="flat"
)
button_20.place(
    x=564.0,
    y=52.0,
    width=21.20473861694336,
    height=24.221660614013672
)

prog()

window.resizable(False, False)
window.mainloop()
