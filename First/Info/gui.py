
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
import subprocess
import threading
import random
import cv2
from PIL import Image, ImageTk
import time
import ujson
import csv
import sys
import os

current_dir = os.path.dirname(os.path.abspath(__file__))

project_root = os.path.abspath(os.path.join(current_dir, '../../'))

sys.path.insert(0, project_root)

import thesystem.system

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

def start_move(event):
    window.lastx, window.lasty = event.widget.winfo_pointerxy()

def move_window(event):
    x_root, y_root = event.widget.winfo_pointerxy()
    deltax, deltay = x_root - window.lastx, y_root - window.lasty

    if deltax != 0 or deltay != 0:  # Update only if there is actual movement
        window.geometry(f"+{window.winfo_x() + deltax}+{window.winfo_y() + deltay}")
        window.lastx, window.lasty = x_root, y_root


def ex_close(eve):
    threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
    thesystem.system.animate_window_close(window, initial_height, window_width, step=20, delay=1)

def get():
    name=entry_1.get()
    age=entry_2.get()
    gen=entry_2_5.get()
    height=entry_3.get()
    weight=entry_4.get()
    wrk_rate=entry_5.get()
    result=entry_6.get()

    if (gen.strip()).upper()=='M':
        bmr=(13.397*float(weight)) + (4.799*float(height)) - (5.677*int(age)) + 88.362
    elif (gen.strip()).upper()=='F':
        bmr=(9.247*float(weight)) + (3.098*float(height)) - (4.330*int(age)) + 447.593

    if (wrk_rate.strip()).upper()=='MODERATE': 
        cc=round(bmr*1.56)
    elif (wrk_rate.strip()).upper()=='EXTREME': 
        cc=round(bmr*1.725)
    elif (wrk_rate.strip()).upper()=='IMPOSSIBLE':
        cc=round(bmr*1.9)

    if result.upper()=='MILD WEIGHT LOSS':
        r1=round(cc*0.89)

    elif result.upper()=='MILD WEIGHT GAIN':
        r1=round(cc*1.11)
    
    bmi=round(float(weight)/((float(height)/100)**2))

    with open("Files/Player Data/Status.json", 'r') as first_fson:
        data=ujson.load(first_fson)
        data["status"][0]['name']=name

        data["cal_data"][0]["age"]=age
        data["cal_data"][0]["gender"]=gen
        data["cal_data"][0]["height"]=height
        data["cal_data"][0]["weight"]=weight
        data["cal_data"][0]["calorie calc"]=cc
        data["cal_data"][0]["final calorie calc"]=r1
        data["cal_data"][0]["result"]=(result.upper())
        data["cal_data"][0]["BMI"]=bmi
    
    with open("Files/Player Data/Status.json", 'w') as fson:
        ujson.dump(data, fson, indent=4)

    with open("Files/Checks/info_open.csv", 'r') as info_open:
        info_fr=csv.reader(info_open)
        for k in info_fr:
            istrue=k[0]

    if istrue=='True':
        with open('Files/Player Data/Theme_Check.json', 'r') as themefile:
            theme_data=ujson.load(themefile)
            theme=theme_data["Theme"]

        subprocess.Popen(['Python', f'{theme} Version/Settings/gui.py'])
        with open("Files/Checks/info_open.csv", 'w', newline='') as info_open:
            fw=csv.writer(info_open)
            fw.writerow(["False"])
        ex_close(window)
    
    else:
        subprocess.Popen(['python', 'First/Main BMI/gui.py'])
        ex_close(window)

window = Tk()

initial_height = 0
target_height = 549
window_width = 867

window.geometry(f"{window_width}x{initial_height}")
thesystem.system.animate_window_open(window, target_height, window_width, step=40, delay=1)
subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])

window.configure(bg = "#FFFFFF")
window.attributes('-alpha',0.8)
window.overrideredirect(True)
window.wm_attributes("-topmost", True)
thesystem.system.make_window_transparent(window)

canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 549,
    width = 867,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    665.0,
    922.0,
    image=image_image_1
)

with open("Files/Mod/presets.json", 'r') as pres_file:
    pres_file_data=ujson.load(pres_file)
    video_path=pres_file_data["Anime"]["Video"]
player = thesystem.system.VideoPlayer(canvas, video_path, 430.0, 263.0)

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    450.0,
    286.0,
    image=image_image_2
)

image_image_3 = PhotoImage(
    file=relative_to_assets("image_3.png"))
image_3 = canvas.create_image(
    188.0,
    101.0,
    image=image_image_3
)

image_image_4 = PhotoImage(
    file=relative_to_assets("image_4.png"))
image_4 = canvas.create_image(
    188.0,
    310.99999999999994,
    image=image_image_4
)

canvas.create_text(
    321.0,
    137.0,
    anchor="nw",
    text="Name:",
    fill="#FFFFFF",
    font=("Montserrat Medium", 16 * -1)
)

entry_1 = Entry(
    bd=0,
    bg="#FFFFFF",
    fg="#000716",
    highlightthickness=0
)
entry_1.place(
    x=321.0,
    y=159.0,
    width=331.0,
    height=21.0
)

canvas.create_text(
    321.0,
    186.0,
    anchor="nw",
    text="Age (in Years):",
    fill="#FFFFFF",
    font=("Montserrat Medium", 16 * -1)
)

entry_2 = Entry(
    bd=0,
    bg="#FFFFFF",
    fg="#000716",
    highlightthickness=0
)
entry_2.place(
    x=321.0,
    y=208.0,
    width=121.0,
    height=21.0
)

canvas.create_text(
    456.0,
    186.0,
    anchor="nw",
    text="Gender (M or F):",
    fill="#FFFFFF",
    font=("Montserrat Medium", 16 * -1)
)

entry_2_5 = Entry(
    bd=0,
    bg="#FFFFFF",
    fg="#000716",
    highlightthickness=0
)
entry_2_5.place(
    x=456.0,
    y=208.0,
    width=121.0,
    height=21.0
)

canvas.create_text(
    321.0,
    239.0,
    anchor="nw",
    text="Height (in cm):",
    fill="#FFFFFF",
    font=("Montserrat Medium", 16 * -1)
)

entry_3 = Entry(
    bd=0,
    bg="#FFFFFF",
    fg="#000716",
    highlightthickness=0
)
entry_3.place(
    x=321.0,
    y=261.0,
    width=121.0,
    height=21.0
)

canvas.create_text(
    456.0,
    239.0,
    anchor="nw",
    text="Weight (in kg):",
    fill="#FFFFFF",
    font=("Montserrat Medium", 16 * -1)
)

entry_4 = Entry(
    bd=0,
    bg="#FFFFFF",
    fg="#000716",
    highlightthickness=0
)
entry_4.place(
    x=456.0,
    y=261.0,
    width=121.0,
    height=21.0
)

canvas.create_text(
    321.0,
    295.0,
    anchor="nw",
    text="Your Physical Workout rate per week ",
    fill="#FFFFFF",
    font=("Montserrat Medium", 16 * -1)
)

canvas.create_text(
    321.0,
    313.0,
    anchor="nw",
    text="(Moderate, Extreme, Impossible):",
    fill="#FFFFFF",
    font=("Montserrat Medium", 16 * -1)
)
entry_5 = Entry(
    bd=0,
    bg="#FFFFFF",
    fg="#000716",
    highlightthickness=0
)
entry_5.place(
    x=321.0,
    y=338.0,
    width=276.0,
    height=21.0
)

canvas.create_text(
    321.0,
    369.0,
    anchor="nw",
    text="Desired Result (Mild Weight Gain, Mild Weight Loss):",
    fill="#FFFFFF",
    font=("Montserrat Medium", 16 * -1)
)

entry_6 = Entry(
    bd=0,
    bg="#FFFFFF",
    fg="#000716",
    highlightthickness=0
)
entry_6.place(
    x=321.0,
    y=391.0,
    width=195.0,
    height=21.0
)


canvas.create_rectangle(
    0.0,
    0.0,
    237.0,
    44.0,
    fill="#0C679B",
    outline="")

canvas.create_rectangle(
    0.0,
    512.0,
    867.0,
    554.0,
    fill="#0C679B",
    outline="")

image_image_5 = PhotoImage(
    file=relative_to_assets("image_5.png"))
image_5 = canvas.create_image(
    36.0,
    278.0,
    image=image_image_5
)

image_image_6 = PhotoImage(
    file=relative_to_assets("image_6.png"))
image_6 = canvas.create_image(
    831.0,
    288.0,
    image=image_image_6
)

canvas.create_rectangle(
    222.0,
    0.0,
    867.0,
    56.0,
    fill="#0C679B",
    outline="")

image_image_7 = PhotoImage(
    file=relative_to_assets("image_7.png"))
image_7 = canvas.create_image(
    429.0,
    42.0,
    image=image_image_7
)

canvas.tag_bind(image_7, "<ButtonPress-1>", start_move)
canvas.tag_bind(image_7, "<B1-Motion>", move_window)

image_image_8 = PhotoImage(
    file=relative_to_assets("image_8.png"))
image_8 = canvas.create_image(
    433.0,
    523.0,
    image=image_image_8
)

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: ex_close(window),
    relief="flat"
)
button_1.place(
    x=752.9273681640625,
    y=79.543701171875,
    width=26.41452407836914,
    height=29.49186897277832
)

button_1.place(
    x=752.9273681640625,
    y=79.543701171875,
    width=26.41452407836914,
    height=29.49186897277832
)

button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: get(),
    relief="flat"
)
button_2.place(
    x=624.0,
    y=457.0,
    width=151.41452026367188,
    height=29.49186897277832
)

window.resizable(False, False)
window.mainloop()
